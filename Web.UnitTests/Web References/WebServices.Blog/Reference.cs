//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.42.
// 
#pragma warning disable 1591

namespace DBlog.Web.UnitTests.WebServices.Blog {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BlogSoap", Namespace="http://dblock.org/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitObject))]
    public partial class Blog : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlogsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithBitmapByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithBitmapByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithThumbnailByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceByWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferrerHostRollupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferrerHostRollupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateHighlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHighlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateEntryImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntriesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteEntryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCopyrightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUptimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Blog() {
            this.Url = global::DBlog.Web.UnitTests.Properties.Settings.Default.DBlog_Web_UnitTests_WebServices_Blog_Blog;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetLoginCompletedEventHandler GetLoginCompleted;
        
        /// <remarks/>
        public event GetLoginByIdCompletedEventHandler GetLoginByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateLoginCompletedEventHandler CreateOrUpdateLoginCompleted;
        
        /// <remarks/>
        public event GetLoginsCountCompletedEventHandler GetLoginsCountCompleted;
        
        /// <remarks/>
        public event GetLoginsCompletedEventHandler GetLoginsCompleted;
        
        /// <remarks/>
        public event DeleteLoginCompletedEventHandler DeleteLoginCompleted;
        
        /// <remarks/>
        public event GetTopicByIdCompletedEventHandler GetTopicByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateTopicCompletedEventHandler CreateOrUpdateTopicCompleted;
        
        /// <remarks/>
        public event GetTopicsCountCompletedEventHandler GetTopicsCountCompleted;
        
        /// <remarks/>
        public event GetTopicsCompletedEventHandler GetTopicsCompleted;
        
        /// <remarks/>
        public event DeleteTopicCompletedEventHandler DeleteTopicCompleted;
        
        /// <remarks/>
        public event GetBlogByIdCompletedEventHandler GetBlogByIdCompleted;
        
        /// <remarks/>
        public event GetBlogsCountCompletedEventHandler GetBlogsCountCompleted;
        
        /// <remarks/>
        public event GetBlogsCompletedEventHandler GetBlogsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateImageCompletedEventHandler CreateOrUpdateImageCompleted;
        
        /// <remarks/>
        public event GetImageByIdCompletedEventHandler GetImageByIdCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event GetImagesCountCompletedEventHandler GetImagesCountCompleted;
        
        /// <remarks/>
        public event GetImagesCompletedEventHandler GetImagesCompleted;
        
        /// <remarks/>
        public event GetImageWithBitmapByIdCompletedEventHandler GetImageWithBitmapByIdCompleted;
        
        /// <remarks/>
        public event GetImageWithBitmapByIdIfModifiedSinceCompletedEventHandler GetImageWithBitmapByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetImageWithThumbnailByIdCompletedEventHandler GetImageWithThumbnailByIdCompleted;
        
        /// <remarks/>
        public event GetImageWithThumbnailByIdIfModifiedSinceCompletedEventHandler GetImageWithThumbnailByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetReferenceByIdCompletedEventHandler GetReferenceByIdCompleted;
        
        /// <remarks/>
        public event GetReferenceByWordCompletedEventHandler GetReferenceByWordCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferenceCompletedEventHandler CreateOrUpdateReferenceCompleted;
        
        /// <remarks/>
        public event GetReferencesCountCompletedEventHandler GetReferencesCountCompleted;
        
        /// <remarks/>
        public event GetReferencesCompletedEventHandler GetReferencesCompleted;
        
        /// <remarks/>
        public event DeleteReferenceCompletedEventHandler DeleteReferenceCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupByIdCompletedEventHandler GetReferrerHostRollupByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferrerHostRollupCompletedEventHandler CreateOrUpdateReferrerHostRollupCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupsCountCompletedEventHandler GetReferrerHostRollupsCountCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupsCompletedEventHandler GetReferrerHostRollupsCompleted;
        
        /// <remarks/>
        public event DeleteReferrerHostRollupCompletedEventHandler DeleteReferrerHostRollupCompleted;
        
        /// <remarks/>
        public event GetHighlightByIdCompletedEventHandler GetHighlightByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateHighlightCompletedEventHandler CreateOrUpdateHighlightCompleted;
        
        /// <remarks/>
        public event GetHighlightsCountCompletedEventHandler GetHighlightsCountCompleted;
        
        /// <remarks/>
        public event GetHighlightsCompletedEventHandler GetHighlightsCompleted;
        
        /// <remarks/>
        public event DeleteHighlightCompletedEventHandler DeleteHighlightCompleted;
        
        /// <remarks/>
        public event GetEntryByIdCompletedEventHandler GetEntryByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateEntryCompletedEventHandler CreateOrUpdateEntryCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateEntryImageCompletedEventHandler CreateOrUpdateEntryImageCompleted;
        
        /// <remarks/>
        public event GetEntriesCountCompletedEventHandler GetEntriesCountCompleted;
        
        /// <remarks/>
        public event GetEntriesCompletedEventHandler GetEntriesCompleted;
        
        /// <remarks/>
        public event DeleteEntryCompletedEventHandler DeleteEntryCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetTitleCompletedEventHandler GetTitleCompleted;
        
        /// <remarks/>
        public event GetCopyrightCompletedEventHandler GetCopyrightCompleted;
        
        /// <remarks/>
        public event GetDescriptionCompletedEventHandler GetDescriptionCompleted;
        
        /// <remarks/>
        public event GetUptimeCompletedEventHandler GetUptimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/Login", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin GetLogin(string ticket) {
            object[] results = this.Invoke("GetLogin", new object[] {
                        ticket});
            return ((TransitLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginAsync(string ticket) {
            this.GetLoginAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetLoginAsync(string ticket, object userState) {
            if ((this.GetLoginOperationCompleted == null)) {
                this.GetLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginOperationCompleted);
            }
            this.InvokeAsync("GetLogin", new object[] {
                        ticket}, this.GetLoginOperationCompleted, userState);
        }
        
        private void OnGetLoginOperationCompleted(object arg) {
            if ((this.GetLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginCompleted(this, new GetLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLoginById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin GetLoginById(string ticket, int id) {
            object[] results = this.Invoke("GetLoginById", new object[] {
                        ticket,
                        id});
            return ((TransitLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginByIdAsync(string ticket, int id) {
            this.GetLoginByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetLoginByIdAsync(string ticket, int id, object userState) {
            if ((this.GetLoginByIdOperationCompleted == null)) {
                this.GetLoginByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginByIdOperationCompleted);
            }
            this.InvokeAsync("GetLoginById", new object[] {
                        ticket,
                        id}, this.GetLoginByIdOperationCompleted, userState);
        }
        
        private void OnGetLoginByIdOperationCompleted(object arg) {
            if ((this.GetLoginByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginByIdCompleted(this, new GetLoginByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateLogin(string ticket, TransitLogin t_login) {
            object[] results = this.Invoke("CreateOrUpdateLogin", new object[] {
                        ticket,
                        t_login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateLoginAsync(string ticket, TransitLogin t_login) {
            this.CreateOrUpdateLoginAsync(ticket, t_login, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateLoginAsync(string ticket, TransitLogin t_login, object userState) {
            if ((this.CreateOrUpdateLoginOperationCompleted == null)) {
                this.CreateOrUpdateLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateLoginOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateLogin", new object[] {
                        ticket,
                        t_login}, this.CreateOrUpdateLoginOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateLoginOperationCompleted(object arg) {
            if ((this.CreateOrUpdateLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateLoginCompleted(this, new CreateOrUpdateLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLoginsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLoginsCount(string ticket) {
            object[] results = this.Invoke("GetLoginsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginsCountAsync(string ticket) {
            this.GetLoginsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetLoginsCountAsync(string ticket, object userState) {
            if ((this.GetLoginsCountOperationCompleted == null)) {
                this.GetLoginsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginsCountOperationCompleted);
            }
            this.InvokeAsync("GetLoginsCount", new object[] {
                        ticket}, this.GetLoginsCountOperationCompleted, userState);
        }
        
        private void OnGetLoginsCountOperationCompleted(object arg) {
            if ((this.GetLoginsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginsCountCompleted(this, new GetLoginsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLogins", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin[] GetLogins(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetLogins", new object[] {
                        ticket,
                        options});
            return ((TransitLogin[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetLoginsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetLoginsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetLoginsOperationCompleted == null)) {
                this.GetLoginsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginsOperationCompleted);
            }
            this.InvokeAsync("GetLogins", new object[] {
                        ticket,
                        options}, this.GetLoginsOperationCompleted, userState);
        }
        
        private void OnGetLoginsOperationCompleted(object arg) {
            if ((this.GetLoginsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginsCompleted(this, new GetLoginsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteLogin(string ticket, int id) {
            this.Invoke("DeleteLogin", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteLoginAsync(string ticket, int id) {
            this.DeleteLoginAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteLoginAsync(string ticket, int id, object userState) {
            if ((this.DeleteLoginOperationCompleted == null)) {
                this.DeleteLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLoginOperationCompleted);
            }
            this.InvokeAsync("DeleteLogin", new object[] {
                        ticket,
                        id}, this.DeleteLoginOperationCompleted, userState);
        }
        
        private void OnDeleteLoginOperationCompleted(object arg) {
            if ((this.DeleteLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopicById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitTopic GetTopicById(string ticket, int id) {
            object[] results = this.Invoke("GetTopicById", new object[] {
                        ticket,
                        id});
            return ((TransitTopic)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicByIdAsync(string ticket, int id) {
            this.GetTopicByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetTopicByIdAsync(string ticket, int id, object userState) {
            if ((this.GetTopicByIdOperationCompleted == null)) {
                this.GetTopicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicByIdOperationCompleted);
            }
            this.InvokeAsync("GetTopicById", new object[] {
                        ticket,
                        id}, this.GetTopicByIdOperationCompleted, userState);
        }
        
        private void OnGetTopicByIdOperationCompleted(object arg) {
            if ((this.GetTopicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicByIdCompleted(this, new GetTopicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateTopic", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateTopic(string ticket, TransitTopic t_topic) {
            object[] results = this.Invoke("CreateOrUpdateTopic", new object[] {
                        ticket,
                        t_topic});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateTopicAsync(string ticket, TransitTopic t_topic) {
            this.CreateOrUpdateTopicAsync(ticket, t_topic, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateTopicAsync(string ticket, TransitTopic t_topic, object userState) {
            if ((this.CreateOrUpdateTopicOperationCompleted == null)) {
                this.CreateOrUpdateTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateTopicOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateTopic", new object[] {
                        ticket,
                        t_topic}, this.CreateOrUpdateTopicOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateTopicOperationCompleted(object arg) {
            if ((this.CreateOrUpdateTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateTopicCompleted(this, new CreateOrUpdateTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopicsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTopicsCount(string ticket) {
            object[] results = this.Invoke("GetTopicsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicsCountAsync(string ticket) {
            this.GetTopicsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetTopicsCountAsync(string ticket, object userState) {
            if ((this.GetTopicsCountOperationCompleted == null)) {
                this.GetTopicsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicsCountOperationCompleted);
            }
            this.InvokeAsync("GetTopicsCount", new object[] {
                        ticket}, this.GetTopicsCountOperationCompleted, userState);
        }
        
        private void OnGetTopicsCountOperationCompleted(object arg) {
            if ((this.GetTopicsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicsCountCompleted(this, new GetTopicsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopics", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitTopic[] GetTopics(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetTopics", new object[] {
                        ticket,
                        options});
            return ((TransitTopic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetTopicsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetTopicsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetTopicsOperationCompleted == null)) {
                this.GetTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicsOperationCompleted);
            }
            this.InvokeAsync("GetTopics", new object[] {
                        ticket,
                        options}, this.GetTopicsOperationCompleted, userState);
        }
        
        private void OnGetTopicsOperationCompleted(object arg) {
            if ((this.GetTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicsCompleted(this, new GetTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteTopic", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTopic(string ticket, int id) {
            this.Invoke("DeleteTopic", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string ticket, int id) {
            this.DeleteTopicAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string ticket, int id, object userState) {
            if ((this.DeleteTopicOperationCompleted == null)) {
                this.DeleteTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTopicOperationCompleted);
            }
            this.InvokeAsync("DeleteTopic", new object[] {
                        ticket,
                        id}, this.DeleteTopicOperationCompleted, userState);
        }
        
        private void OnDeleteTopicOperationCompleted(object arg) {
            if ((this.DeleteTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTopicCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBlogById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBlog GetBlogById(string ticket, int id) {
            object[] results = this.Invoke("GetBlogById", new object[] {
                        ticket,
                        id});
            return ((TransitBlog)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogByIdAsync(string ticket, int id) {
            this.GetBlogByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBlogByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBlogByIdOperationCompleted == null)) {
                this.GetBlogByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogByIdOperationCompleted);
            }
            this.InvokeAsync("GetBlogById", new object[] {
                        ticket,
                        id}, this.GetBlogByIdOperationCompleted, userState);
        }
        
        private void OnGetBlogByIdOperationCompleted(object arg) {
            if ((this.GetBlogByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogByIdCompleted(this, new GetBlogByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBlogsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBlogsCount(string ticket, TransitBlogQueryOptions options) {
            object[] results = this.Invoke("GetBlogsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogsCountAsync(string ticket, TransitBlogQueryOptions options) {
            this.GetBlogsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBlogsCountAsync(string ticket, TransitBlogQueryOptions options, object userState) {
            if ((this.GetBlogsCountOperationCompleted == null)) {
                this.GetBlogsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogsCountOperationCompleted);
            }
            this.InvokeAsync("GetBlogsCount", new object[] {
                        ticket,
                        options}, this.GetBlogsCountOperationCompleted, userState);
        }
        
        private void OnGetBlogsCountOperationCompleted(object arg) {
            if ((this.GetBlogsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogsCountCompleted(this, new GetBlogsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBlogs", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBlog[] GetBlogs(string ticket, TransitBlogQueryOptions options) {
            object[] results = this.Invoke("GetBlogs", new object[] {
                        ticket,
                        options});
            return ((TransitBlog[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBlogsAsync(string ticket, TransitBlogQueryOptions options) {
            this.GetBlogsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBlogsAsync(string ticket, TransitBlogQueryOptions options, object userState) {
            if ((this.GetBlogsOperationCompleted == null)) {
                this.GetBlogsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlogsOperationCompleted);
            }
            this.InvokeAsync("GetBlogs", new object[] {
                        ticket,
                        options}, this.GetBlogsOperationCompleted, userState);
        }
        
        private void OnGetBlogsOperationCompleted(object arg) {
            if ((this.GetBlogsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlogsCompleted(this, new GetBlogsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateImage(string ticket, TransitImage t_image) {
            object[] results = this.Invoke("CreateOrUpdateImage", new object[] {
                        ticket,
                        t_image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAsync(string ticket, TransitImage t_image) {
            this.CreateOrUpdateImageAsync(ticket, t_image, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAsync(string ticket, TransitImage t_image, object userState) {
            if ((this.CreateOrUpdateImageOperationCompleted == null)) {
                this.CreateOrUpdateImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateImageOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateImage", new object[] {
                        ticket,
                        t_image}, this.CreateOrUpdateImageOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateImageOperationCompleted(object arg) {
            if ((this.CreateOrUpdateImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateImageCompleted(this, new CreateOrUpdateImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageById(string ticket, int id) {
            object[] results = this.Invoke("GetImageById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageByIdAsync(string ticket, int id) {
            this.GetImageByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageByIdOperationCompleted == null)) {
                this.GetImageByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageById", new object[] {
                        ticket,
                        id}, this.GetImageByIdOperationCompleted, userState);
        }
        
        private void OnGetImageByIdOperationCompleted(object arg) {
            if ((this.GetImageByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageByIdCompleted(this, new GetImageByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImage(string ticket, int id) {
            this.Invoke("DeleteImage", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string ticket, int id) {
            this.DeleteImageAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string ticket, int id, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        ticket,
                        id}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImagesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetImagesCount(string ticket, TransitImageQueryOptions options) {
            object[] results = this.Invoke("GetImagesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(string ticket, TransitImageQueryOptions options) {
            this.GetImagesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(string ticket, TransitImageQueryOptions options, object userState) {
            if ((this.GetImagesCountOperationCompleted == null)) {
                this.GetImagesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesCountOperationCompleted);
            }
            this.InvokeAsync("GetImagesCount", new object[] {
                        ticket,
                        options}, this.GetImagesCountOperationCompleted, userState);
        }
        
        private void OnGetImagesCountOperationCompleted(object arg) {
            if ((this.GetImagesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCountCompleted(this, new GetImagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImages", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage[] GetImages(string ticket, TransitImageQueryOptions options) {
            object[] results = this.Invoke("GetImages", new object[] {
                        ticket,
                        options});
            return ((TransitImage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesAsync(string ticket, TransitImageQueryOptions options) {
            this.GetImagesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImagesAsync(string ticket, TransitImageQueryOptions options, object userState) {
            if ((this.GetImagesOperationCompleted == null)) {
                this.GetImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesOperationCompleted);
            }
            this.InvokeAsync("GetImages", new object[] {
                        ticket,
                        options}, this.GetImagesOperationCompleted, userState);
        }
        
        private void OnGetImagesOperationCompleted(object arg) {
            if ((this.GetImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCompleted(this, new GetImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithBitmapById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithBitmapById(string ticket, int id) {
            object[] results = this.Invoke("GetImageWithBitmapById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdAsync(string ticket, int id) {
            this.GetImageWithBitmapByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageWithBitmapByIdOperationCompleted == null)) {
                this.GetImageWithBitmapByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithBitmapByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageWithBitmapById", new object[] {
                        ticket,
                        id}, this.GetImageWithBitmapByIdOperationCompleted, userState);
        }
        
        private void OnGetImageWithBitmapByIdOperationCompleted(object arg) {
            if ((this.GetImageWithBitmapByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithBitmapByIdCompleted(this, new GetImageWithBitmapByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithBitmapByIdIfModifiedSince", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithBitmapByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetImageWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetImageWithBitmapByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithBitmapByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetImageWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetImageWithBitmapByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetImageWithBitmapByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithBitmapByIdIfModifiedSinceCompleted(this, new GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithThumbnailById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithThumbnailById(string ticket, int id) {
            object[] results = this.Invoke("GetImageWithThumbnailById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdAsync(string ticket, int id) {
            this.GetImageWithThumbnailByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageWithThumbnailByIdOperationCompleted == null)) {
                this.GetImageWithThumbnailByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithThumbnailByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageWithThumbnailById", new object[] {
                        ticket,
                        id}, this.GetImageWithThumbnailByIdOperationCompleted, userState);
        }
        
        private void OnGetImageWithThumbnailByIdOperationCompleted(object arg) {
            if ((this.GetImageWithThumbnailByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithThumbnailByIdCompleted(this, new GetImageWithThumbnailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithThumbnailByIdIfModifiedSince", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithThumbnailByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetImageWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetImageWithThumbnailByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithThumbnailByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetImageWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetImageWithThumbnailByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetImageWithThumbnailByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithThumbnailByIdIfModifiedSinceCompleted(this, new GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferenceById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference GetReferenceById(string ticket, int id) {
            object[] results = this.Invoke("GetReferenceById", new object[] {
                        ticket,
                        id});
            return ((TransitReference)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceByIdAsync(string ticket, int id) {
            this.GetReferenceByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferenceByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferenceByIdOperationCompleted == null)) {
                this.GetReferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferenceById", new object[] {
                        ticket,
                        id}, this.GetReferenceByIdOperationCompleted, userState);
        }
        
        private void OnGetReferenceByIdOperationCompleted(object arg) {
            if ((this.GetReferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceByIdCompleted(this, new GetReferenceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferenceByWord", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference GetReferenceByWord(string ticket, string word) {
            object[] results = this.Invoke("GetReferenceByWord", new object[] {
                        ticket,
                        word});
            return ((TransitReference)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceByWordAsync(string ticket, string word) {
            this.GetReferenceByWordAsync(ticket, word, null);
        }
        
        /// <remarks/>
        public void GetReferenceByWordAsync(string ticket, string word, object userState) {
            if ((this.GetReferenceByWordOperationCompleted == null)) {
                this.GetReferenceByWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceByWordOperationCompleted);
            }
            this.InvokeAsync("GetReferenceByWord", new object[] {
                        ticket,
                        word}, this.GetReferenceByWordOperationCompleted, userState);
        }
        
        private void OnGetReferenceByWordOperationCompleted(object arg) {
            if ((this.GetReferenceByWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceByWordCompleted(this, new GetReferenceByWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReference", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReference(string ticket, TransitReference t_reference) {
            object[] results = this.Invoke("CreateOrUpdateReference", new object[] {
                        ticket,
                        t_reference});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferenceAsync(string ticket, TransitReference t_reference) {
            this.CreateOrUpdateReferenceAsync(ticket, t_reference, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferenceAsync(string ticket, TransitReference t_reference, object userState) {
            if ((this.CreateOrUpdateReferenceOperationCompleted == null)) {
                this.CreateOrUpdateReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferenceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReference", new object[] {
                        ticket,
                        t_reference}, this.CreateOrUpdateReferenceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferenceOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferenceCompleted(this, new CreateOrUpdateReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferencesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferencesCount(string ticket) {
            object[] results = this.Invoke("GetReferencesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesCountAsync(string ticket) {
            this.GetReferencesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetReferencesCountAsync(string ticket, object userState) {
            if ((this.GetReferencesCountOperationCompleted == null)) {
                this.GetReferencesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesCountOperationCompleted);
            }
            this.InvokeAsync("GetReferencesCount", new object[] {
                        ticket}, this.GetReferencesCountOperationCompleted, userState);
        }
        
        private void OnGetReferencesCountOperationCompleted(object arg) {
            if ((this.GetReferencesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesCountCompleted(this, new GetReferencesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferences", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference[] GetReferences(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferences", new object[] {
                        ticket,
                        options});
            return ((TransitReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferencesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferencesOperationCompleted == null)) {
                this.GetReferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesOperationCompleted);
            }
            this.InvokeAsync("GetReferences", new object[] {
                        ticket,
                        options}, this.GetReferencesOperationCompleted, userState);
        }
        
        private void OnGetReferencesOperationCompleted(object arg) {
            if ((this.GetReferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesCompleted(this, new GetReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReference", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReference(string ticket, int id) {
            this.Invoke("DeleteReference", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(string ticket, int id) {
            this.DeleteReferenceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferenceOperationCompleted == null)) {
                this.DeleteReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferenceOperationCompleted);
            }
            this.InvokeAsync("DeleteReference", new object[] {
                        ticket,
                        id}, this.DeleteReferenceOperationCompleted, userState);
        }
        
        private void OnDeleteReferenceOperationCompleted(object arg) {
            if ((this.DeleteReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferenceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollupById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHostRollup GetReferrerHostRollupById(string ticket, int id) {
            object[] results = this.Invoke("GetReferrerHostRollupById", new object[] {
                        ticket,
                        id});
            return ((TransitReferrerHostRollup)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupByIdAsync(string ticket, int id) {
            this.GetReferrerHostRollupByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferrerHostRollupByIdOperationCompleted == null)) {
                this.GetReferrerHostRollupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollupById", new object[] {
                        ticket,
                        id}, this.GetReferrerHostRollupByIdOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupByIdOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupByIdCompleted(this, new GetReferrerHostRollupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReferrerHostRollup", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReferrerHostRollup(string ticket, TransitReferrerHostRollup t_referrerhostrollup) {
            object[] results = this.Invoke("CreateOrUpdateReferrerHostRollup", new object[] {
                        ticket,
                        t_referrerhostrollup});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostRollupAsync(string ticket, TransitReferrerHostRollup t_referrerhostrollup) {
            this.CreateOrUpdateReferrerHostRollupAsync(ticket, t_referrerhostrollup, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostRollupAsync(string ticket, TransitReferrerHostRollup t_referrerhostrollup, object userState) {
            if ((this.CreateOrUpdateReferrerHostRollupOperationCompleted == null)) {
                this.CreateOrUpdateReferrerHostRollupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferrerHostRollupOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReferrerHostRollup", new object[] {
                        ticket,
                        t_referrerhostrollup}, this.CreateOrUpdateReferrerHostRollupOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferrerHostRollupOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferrerHostRollupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferrerHostRollupCompleted(this, new CreateOrUpdateReferrerHostRollupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollupsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferrerHostRollupsCount(string ticket) {
            object[] results = this.Invoke("GetReferrerHostRollupsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsCountAsync(string ticket) {
            this.GetReferrerHostRollupsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsCountAsync(string ticket, object userState) {
            if ((this.GetReferrerHostRollupsCountOperationCompleted == null)) {
                this.GetReferrerHostRollupsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupsCountOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollupsCount", new object[] {
                        ticket}, this.GetReferrerHostRollupsCountOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupsCountOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupsCountCompleted(this, new GetReferrerHostRollupsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollups", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHostRollup[] GetReferrerHostRollups(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferrerHostRollups", new object[] {
                        ticket,
                        options});
            return ((TransitReferrerHostRollup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferrerHostRollupsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferrerHostRollupsOperationCompleted == null)) {
                this.GetReferrerHostRollupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupsOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollups", new object[] {
                        ticket,
                        options}, this.GetReferrerHostRollupsOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupsOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupsCompleted(this, new GetReferrerHostRollupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReferrerHostRollup", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReferrerHostRollup(string ticket, int id) {
            this.Invoke("DeleteReferrerHostRollup", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferrerHostRollupAsync(string ticket, int id) {
            this.DeleteReferrerHostRollupAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferrerHostRollupAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferrerHostRollupOperationCompleted == null)) {
                this.DeleteReferrerHostRollupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferrerHostRollupOperationCompleted);
            }
            this.InvokeAsync("DeleteReferrerHostRollup", new object[] {
                        ticket,
                        id}, this.DeleteReferrerHostRollupOperationCompleted, userState);
        }
        
        private void OnDeleteReferrerHostRollupOperationCompleted(object arg) {
            if ((this.DeleteReferrerHostRollupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferrerHostRollupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlightById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitHighlight GetHighlightById(string ticket, int id) {
            object[] results = this.Invoke("GetHighlightById", new object[] {
                        ticket,
                        id});
            return ((TransitHighlight)(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightByIdAsync(string ticket, int id) {
            this.GetHighlightByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetHighlightByIdAsync(string ticket, int id, object userState) {
            if ((this.GetHighlightByIdOperationCompleted == null)) {
                this.GetHighlightByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightByIdOperationCompleted);
            }
            this.InvokeAsync("GetHighlightById", new object[] {
                        ticket,
                        id}, this.GetHighlightByIdOperationCompleted, userState);
        }
        
        private void OnGetHighlightByIdOperationCompleted(object arg) {
            if ((this.GetHighlightByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightByIdCompleted(this, new GetHighlightByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateHighlight", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateHighlight(string ticket, TransitHighlight t_highlight) {
            object[] results = this.Invoke("CreateOrUpdateHighlight", new object[] {
                        ticket,
                        t_highlight});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateHighlightAsync(string ticket, TransitHighlight t_highlight) {
            this.CreateOrUpdateHighlightAsync(ticket, t_highlight, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateHighlightAsync(string ticket, TransitHighlight t_highlight, object userState) {
            if ((this.CreateOrUpdateHighlightOperationCompleted == null)) {
                this.CreateOrUpdateHighlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateHighlightOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateHighlight", new object[] {
                        ticket,
                        t_highlight}, this.CreateOrUpdateHighlightOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateHighlightOperationCompleted(object arg) {
            if ((this.CreateOrUpdateHighlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateHighlightCompleted(this, new CreateOrUpdateHighlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlightsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHighlightsCount(string ticket) {
            object[] results = this.Invoke("GetHighlightsCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightsCountAsync(string ticket) {
            this.GetHighlightsCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetHighlightsCountAsync(string ticket, object userState) {
            if ((this.GetHighlightsCountOperationCompleted == null)) {
                this.GetHighlightsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightsCountOperationCompleted);
            }
            this.InvokeAsync("GetHighlightsCount", new object[] {
                        ticket}, this.GetHighlightsCountOperationCompleted, userState);
        }
        
        private void OnGetHighlightsCountOperationCompleted(object arg) {
            if ((this.GetHighlightsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightsCountCompleted(this, new GetHighlightsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlights", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitHighlight[] GetHighlights(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetHighlights", new object[] {
                        ticket,
                        options});
            return ((TransitHighlight[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetHighlightsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetHighlightsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetHighlightsOperationCompleted == null)) {
                this.GetHighlightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightsOperationCompleted);
            }
            this.InvokeAsync("GetHighlights", new object[] {
                        ticket,
                        options}, this.GetHighlightsOperationCompleted, userState);
        }
        
        private void OnGetHighlightsOperationCompleted(object arg) {
            if ((this.GetHighlightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightsCompleted(this, new GetHighlightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteHighlight", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteHighlight(string ticket, int id) {
            this.Invoke("DeleteHighlight", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteHighlightAsync(string ticket, int id) {
            this.DeleteHighlightAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteHighlightAsync(string ticket, int id, object userState) {
            if ((this.DeleteHighlightOperationCompleted == null)) {
                this.DeleteHighlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHighlightOperationCompleted);
            }
            this.InvokeAsync("DeleteHighlight", new object[] {
                        ticket,
                        id}, this.DeleteHighlightOperationCompleted, userState);
        }
        
        private void OnDeleteHighlightOperationCompleted(object arg) {
            if ((this.DeleteHighlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHighlightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetEntryById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitEntry GetEntryById(string ticket, int id) {
            object[] results = this.Invoke("GetEntryById", new object[] {
                        ticket,
                        id});
            return ((TransitEntry)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntryByIdAsync(string ticket, int id) {
            this.GetEntryByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetEntryByIdAsync(string ticket, int id, object userState) {
            if ((this.GetEntryByIdOperationCompleted == null)) {
                this.GetEntryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntryByIdOperationCompleted);
            }
            this.InvokeAsync("GetEntryById", new object[] {
                        ticket,
                        id}, this.GetEntryByIdOperationCompleted, userState);
        }
        
        private void OnGetEntryByIdOperationCompleted(object arg) {
            if ((this.GetEntryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntryByIdCompleted(this, new GetEntryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateEntry", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateEntry(string ticket, TransitEntry t_entry) {
            object[] results = this.Invoke("CreateOrUpdateEntry", new object[] {
                        ticket,
                        t_entry});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateEntryAsync(string ticket, TransitEntry t_entry) {
            this.CreateOrUpdateEntryAsync(ticket, t_entry, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateEntryAsync(string ticket, TransitEntry t_entry, object userState) {
            if ((this.CreateOrUpdateEntryOperationCompleted == null)) {
                this.CreateOrUpdateEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateEntryOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateEntry", new object[] {
                        ticket,
                        t_entry}, this.CreateOrUpdateEntryOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateEntryOperationCompleted(object arg) {
            if ((this.CreateOrUpdateEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateEntryCompleted(this, new CreateOrUpdateEntryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateEntryImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateEntryImage(string ticket, int entry_id, TransitImage t_image) {
            object[] results = this.Invoke("CreateOrUpdateEntryImage", new object[] {
                        ticket,
                        entry_id,
                        t_image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateEntryImageAsync(string ticket, int entry_id, TransitImage t_image) {
            this.CreateOrUpdateEntryImageAsync(ticket, entry_id, t_image, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateEntryImageAsync(string ticket, int entry_id, TransitImage t_image, object userState) {
            if ((this.CreateOrUpdateEntryImageOperationCompleted == null)) {
                this.CreateOrUpdateEntryImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateEntryImageOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateEntryImage", new object[] {
                        ticket,
                        entry_id,
                        t_image}, this.CreateOrUpdateEntryImageOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateEntryImageOperationCompleted(object arg) {
            if ((this.CreateOrUpdateEntryImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateEntryImageCompleted(this, new CreateOrUpdateEntryImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetEntriesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetEntriesCount(string ticket) {
            object[] results = this.Invoke("GetEntriesCount", new object[] {
                        ticket});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntriesCountAsync(string ticket) {
            this.GetEntriesCountAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetEntriesCountAsync(string ticket, object userState) {
            if ((this.GetEntriesCountOperationCompleted == null)) {
                this.GetEntriesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntriesCountOperationCompleted);
            }
            this.InvokeAsync("GetEntriesCount", new object[] {
                        ticket}, this.GetEntriesCountOperationCompleted, userState);
        }
        
        private void OnGetEntriesCountOperationCompleted(object arg) {
            if ((this.GetEntriesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntriesCountCompleted(this, new GetEntriesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetEntries", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitEntry[] GetEntries(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetEntries", new object[] {
                        ticket,
                        options});
            return ((TransitEntry[])(results[0]));
        }
        
        /// <remarks/>
        public void GetEntriesAsync(string ticket, WebServiceQueryOptions options) {
            this.GetEntriesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetEntriesAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetEntriesOperationCompleted == null)) {
                this.GetEntriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntriesOperationCompleted);
            }
            this.InvokeAsync("GetEntries", new object[] {
                        ticket,
                        options}, this.GetEntriesOperationCompleted, userState);
        }
        
        private void OnGetEntriesOperationCompleted(object arg) {
            if ((this.GetEntriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntriesCompleted(this, new GetEntriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteEntry", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteEntry(string ticket, int id) {
            this.Invoke("DeleteEntry", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteEntryAsync(string ticket, int id) {
            this.DeleteEntryAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteEntryAsync(string ticket, int id, object userState) {
            if ((this.DeleteEntryOperationCompleted == null)) {
                this.DeleteEntryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteEntryOperationCompleted);
            }
            this.InvokeAsync("DeleteEntry", new object[] {
                        ticket,
                        id}, this.DeleteEntryOperationCompleted, userState);
        }
        
        private void OnDeleteEntryOperationCompleted(object arg) {
            if ((this.DeleteEntryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteEntryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetVersion", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTitle", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTitle() {
            object[] results = this.Invoke("GetTitle", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTitleAsync() {
            this.GetTitleAsync(null);
        }
        
        /// <remarks/>
        public void GetTitleAsync(object userState) {
            if ((this.GetTitleOperationCompleted == null)) {
                this.GetTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTitleOperationCompleted);
            }
            this.InvokeAsync("GetTitle", new object[0], this.GetTitleOperationCompleted, userState);
        }
        
        private void OnGetTitleOperationCompleted(object arg) {
            if ((this.GetTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTitleCompleted(this, new GetTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetCopyright", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCopyright() {
            object[] results = this.Invoke("GetCopyright", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCopyrightAsync() {
            this.GetCopyrightAsync(null);
        }
        
        /// <remarks/>
        public void GetCopyrightAsync(object userState) {
            if ((this.GetCopyrightOperationCompleted == null)) {
                this.GetCopyrightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCopyrightOperationCompleted);
            }
            this.InvokeAsync("GetCopyright", new object[0], this.GetCopyrightOperationCompleted, userState);
        }
        
        private void OnGetCopyrightOperationCompleted(object arg) {
            if ((this.GetCopyrightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCopyrightCompleted(this, new GetCopyrightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetDescription", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDescription() {
            object[] results = this.Invoke("GetDescription", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDescriptionAsync() {
            this.GetDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetDescriptionAsync(object userState) {
            if ((this.GetDescriptionOperationCompleted == null)) {
                this.GetDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetDescription", new object[0], this.GetDescriptionOperationCompleted, userState);
        }
        
        private void OnGetDescriptionOperationCompleted(object arg) {
            if ((this.GetDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDescriptionCompleted(this, new GetDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetUptime", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUptime() {
            object[] results = this.Invoke("GetUptime", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUptimeAsync() {
            this.GetUptimeAsync(null);
        }
        
        /// <remarks/>
        public void GetUptimeAsync(object userState) {
            if ((this.GetUptimeOperationCompleted == null)) {
                this.GetUptimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUptimeOperationCompleted);
            }
            this.InvokeAsync("GetUptime", new object[0], this.GetUptimeOperationCompleted, userState);
        }
        
        private void OnGetUptimeOperationCompleted(object arg) {
            if ((this.GetUptimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUptimeCompleted(this, new GetUptimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitLogin : TransitObject {
        
        private string nameField;
        
        private string emailField;
        
        private TransitLoginRole roleField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string websiteField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public TransitLoginRole Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum TransitLoginRole {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Guest,
        
        /// <remarks/>
        Administrator,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitEntry))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitHighlight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferrerHostRollup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBlog))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitTopic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitLogin))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitObject {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBlogQueryOptions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class WebServiceQueryOptions {
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImageQueryOptions : WebServiceQueryOptions {
        
        private bool excludeBlogImagesField;
        
        /// <remarks/>
        public bool ExcludeBlogImages {
            get {
                return this.excludeBlogImagesField;
            }
            set {
                this.excludeBlogImagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitBlogQueryOptions : WebServiceQueryOptions {
        
        private int topicIdField;
        
        /// <remarks/>
        public int TopicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitEntry : TransitObject {
        
        private int imageIdField;
        
        private string titleField;
        
        private string textField;
        
        private string ipAddressField;
        
        private int topicIdField;
        
        private int ownerLoginIdField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public int TopicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerLoginId {
            get {
                return this.ownerLoginIdField;
            }
            set {
                this.ownerLoginIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitHighlight : TransitObject {
        
        private string titleField;
        
        private string urlField;
        
        private string descriptionField;
        
        private int imageIdField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferrerHostRollup : TransitObject {
        
        private string nameField;
        
        private string rollupField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Rollup {
            get {
                return this.rollupField;
            }
            set {
                this.rollupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReference : TransitObject {
        
        private string wordField;
        
        private string urlField;
        
        private string resultField;
        
        /// <remarks/>
        public string Word {
            get {
                return this.wordField;
            }
            set {
                this.wordField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImage : TransitObject {
        
        private string nameField;
        
        private string pathField;
        
        private string descriptionField;
        
        private bool preferredField;
        
        private byte[] dataField;
        
        private byte[] thumbnailField;
        
        private System.DateTime modifiedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Preferred {
            get {
                return this.preferredField;
            }
            set {
                this.preferredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitBlog : TransitObject {
        
        private string titleField;
        
        private TransitBlogType typeField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private string textField;
        
        private string topicNameField;
        
        private int topicIdField;
        
        private int templateIdField;
        
        private int ownerLoginIdField;
        
        private int imageIdField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public TransitBlogType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string TopicName {
            get {
                return this.topicNameField;
            }
            set {
                this.topicNameField = value;
            }
        }
        
        /// <remarks/>
        public int TopicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
        
        /// <remarks/>
        public int TemplateId {
            get {
                return this.templateIdField;
            }
            set {
                this.templateIdField = value;
            }
        }
        
        /// <remarks/>
        public int OwnerLoginId {
            get {
                return this.ownerLoginIdField;
            }
            set {
                this.ownerLoginIdField = value;
            }
        }
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum TransitBlogType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Entry,
        
        /// <remarks/>
        Gallery,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.42")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitTopic : TransitObject {
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLoginCompletedEventHandler(object sender, GetLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLoginByIdCompletedEventHandler(object sender, GetLoginByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateLoginCompletedEventHandler(object sender, CreateOrUpdateLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLoginsCountCompletedEventHandler(object sender, GetLoginsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetLoginsCompletedEventHandler(object sender, GetLoginsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTopicByIdCompletedEventHandler(object sender, GetTopicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitTopic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitTopic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateTopicCompletedEventHandler(object sender, CreateOrUpdateTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTopicsCountCompletedEventHandler(object sender, GetTopicsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTopicsCompletedEventHandler(object sender, GetTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitTopic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitTopic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteTopicCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetBlogByIdCompletedEventHandler(object sender, GetBlogByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBlog Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBlog)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetBlogsCountCompletedEventHandler(object sender, GetBlogsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetBlogsCompletedEventHandler(object sender, GetBlogsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBlog[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBlog[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateImageCompletedEventHandler(object sender, CreateOrUpdateImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageByIdCompletedEventHandler(object sender, GetImageByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImagesCountCompletedEventHandler(object sender, GetImagesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImagesCompletedEventHandler(object sender, GetImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageWithBitmapByIdCompletedEventHandler(object sender, GetImageWithBitmapByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithBitmapByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithBitmapByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageWithBitmapByIdIfModifiedSinceCompletedEventHandler(object sender, GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageWithThumbnailByIdCompletedEventHandler(object sender, GetImageWithThumbnailByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithThumbnailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithThumbnailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetImageWithThumbnailByIdIfModifiedSinceCompletedEventHandler(object sender, GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferenceByIdCompletedEventHandler(object sender, GetReferenceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferenceByWordCompletedEventHandler(object sender, GetReferenceByWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceByWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceByWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateReferenceCompletedEventHandler(object sender, CreateOrUpdateReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferencesCountCompletedEventHandler(object sender, GetReferencesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferencesCompletedEventHandler(object sender, GetReferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteReferenceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferrerHostRollupByIdCompletedEventHandler(object sender, GetReferrerHostRollupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHostRollup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHostRollup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateReferrerHostRollupCompletedEventHandler(object sender, CreateOrUpdateReferrerHostRollupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferrerHostRollupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferrerHostRollupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferrerHostRollupsCountCompletedEventHandler(object sender, GetReferrerHostRollupsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetReferrerHostRollupsCompletedEventHandler(object sender, GetReferrerHostRollupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHostRollup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHostRollup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteReferrerHostRollupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetHighlightByIdCompletedEventHandler(object sender, GetHighlightByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitHighlight Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitHighlight)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateHighlightCompletedEventHandler(object sender, CreateOrUpdateHighlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateHighlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateHighlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetHighlightsCountCompletedEventHandler(object sender, GetHighlightsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetHighlightsCompletedEventHandler(object sender, GetHighlightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitHighlight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitHighlight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteHighlightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetEntryByIdCompletedEventHandler(object sender, GetEntryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitEntry Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitEntry)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateEntryCompletedEventHandler(object sender, CreateOrUpdateEntryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateEntryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateEntryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void CreateOrUpdateEntryImageCompletedEventHandler(object sender, CreateOrUpdateEntryImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateEntryImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateEntryImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetEntriesCountCompletedEventHandler(object sender, GetEntriesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntriesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntriesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetEntriesCompletedEventHandler(object sender, GetEntriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitEntry[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitEntry[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void DeleteEntryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetTitleCompletedEventHandler(object sender, GetTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetCopyrightCompletedEventHandler(object sender, GetCopyrightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCopyrightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCopyrightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetDescriptionCompletedEventHandler(object sender, GetDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    public delegate void GetUptimeCompletedEventHandler(object sender, GetUptimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUptimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUptimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591
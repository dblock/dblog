//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4200
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.4200.
// 
#pragma warning disable 1591

namespace DBlog.Web.UnitTests.WebServices.Blog {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BlogSoap", Namespace="http://dblock.org/ns/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitObject))]
    public partial class Blog : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetPostCommentByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePostCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostCommentsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatedCommentsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateImageCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageCommentByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageCommentsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementNamedCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHourlyCountSumOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateFeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFeedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedItemByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateFeedItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedItemsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFeedItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFeedItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePostLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostLoginByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePostLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostLoginsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostLoginsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrowserByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateBrowserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementBrowserCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrowsersCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBrowsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBrowserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferrerHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferrerHostOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginByUsernameOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetLoginPasswordEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback ResetLoginPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLoginsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTopicsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTopicOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateImageAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementImageCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementImageCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithBitmapByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageEXIFMetaDataByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithBitmapByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithThumbnailByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferenceByWordOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchReferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchReferencesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferrerHostRollupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerHostRollupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferrerHostRollupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerSearchQueryByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateReferrerSearchQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerSearchQueriesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReferrerSearchQueriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteReferrerSearchQueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateHighlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHighlightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteHighlightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback HasAccessToPostOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostsCountExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostsExOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePostOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementPostCounterOperationCompleted;
        
        private System.Threading.SendOrPostCallback IncrementPostCountersOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStatsSummaryOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePostImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostImageByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePostImageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostImagesCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostImagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostImagesCountExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPostImagesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermalinkByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermalinkBySourceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePermalinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermalinksCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPermalinksOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePermalinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdateCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrUpdatePostCommentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCopyrightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDescriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUptimeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Blog() {
            this.Url = global::DBlog.Web.UnitTests.Properties.Settings.Default.DBlog_Web_UnitTests_WebServices_Blog_Blog;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetPostCommentByIdCompletedEventHandler GetPostCommentByIdCompleted;
        
        /// <remarks/>
        public event DeletePostCommentCompletedEventHandler DeletePostCommentCompleted;
        
        /// <remarks/>
        public event GetPostCommentsCountCompletedEventHandler GetPostCommentsCountCompleted;
        
        /// <remarks/>
        public event GetAssociatedCommentsCompletedEventHandler GetAssociatedCommentsCompleted;
        
        /// <remarks/>
        public event GetAssociatedCommentsCountCompletedEventHandler GetAssociatedCommentsCountCompleted;
        
        /// <remarks/>
        public event GetPostCommentsCompletedEventHandler GetPostCommentsCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateImageCommentCompletedEventHandler CreateOrUpdateImageCommentCompleted;
        
        /// <remarks/>
        public event GetImageCommentByIdCompletedEventHandler GetImageCommentByIdCompleted;
        
        /// <remarks/>
        public event DeleteImageCommentCompletedEventHandler DeleteImageCommentCompleted;
        
        /// <remarks/>
        public event GetImageCommentsCountCompletedEventHandler GetImageCommentsCountCompleted;
        
        /// <remarks/>
        public event GetImageCommentsCompletedEventHandler GetImageCommentsCompleted;
        
        /// <remarks/>
        public event IncrementCountersCompletedEventHandler IncrementCountersCompleted;
        
        /// <remarks/>
        public event IncrementNamedCounterCompletedEventHandler IncrementNamedCounterCompleted;
        
        /// <remarks/>
        public event GetHourlyCountSumCompletedEventHandler GetHourlyCountSumCompleted;
        
        /// <remarks/>
        public event GetFeedByIdCompletedEventHandler GetFeedByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateFeedCompletedEventHandler CreateOrUpdateFeedCompleted;
        
        /// <remarks/>
        public event GetFeedsCountCompletedEventHandler GetFeedsCountCompleted;
        
        /// <remarks/>
        public event GetFeedsCompletedEventHandler GetFeedsCompleted;
        
        /// <remarks/>
        public event DeleteFeedCompletedEventHandler DeleteFeedCompleted;
        
        /// <remarks/>
        public event UpdateFeedCompletedEventHandler UpdateFeedCompleted;
        
        /// <remarks/>
        public event GetFeedItemByIdCompletedEventHandler GetFeedItemByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateFeedItemCompletedEventHandler CreateOrUpdateFeedItemCompleted;
        
        /// <remarks/>
        public event GetFeedItemsCountCompletedEventHandler GetFeedItemsCountCompleted;
        
        /// <remarks/>
        public event GetFeedItemsCompletedEventHandler GetFeedItemsCompleted;
        
        /// <remarks/>
        public event DeleteFeedItemCompletedEventHandler DeleteFeedItemCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePostLoginCompletedEventHandler CreateOrUpdatePostLoginCompleted;
        
        /// <remarks/>
        public event GetPostLoginByIdCompletedEventHandler GetPostLoginByIdCompleted;
        
        /// <remarks/>
        public event DeletePostLoginCompletedEventHandler DeletePostLoginCompleted;
        
        /// <remarks/>
        public event GetPostLoginsCountCompletedEventHandler GetPostLoginsCountCompleted;
        
        /// <remarks/>
        public event GetPostLoginsCompletedEventHandler GetPostLoginsCompleted;
        
        /// <remarks/>
        public event GetBrowserByIdCompletedEventHandler GetBrowserByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateBrowserCompletedEventHandler CreateOrUpdateBrowserCompleted;
        
        /// <remarks/>
        public event IncrementBrowserCounterCompletedEventHandler IncrementBrowserCounterCompleted;
        
        /// <remarks/>
        public event GetBrowsersCountCompletedEventHandler GetBrowsersCountCompleted;
        
        /// <remarks/>
        public event GetBrowsersCompletedEventHandler GetBrowsersCompleted;
        
        /// <remarks/>
        public event DeleteBrowserCompletedEventHandler DeleteBrowserCompleted;
        
        /// <remarks/>
        public event GetReferrerHostByIdCompletedEventHandler GetReferrerHostByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferrerHostCompletedEventHandler CreateOrUpdateReferrerHostCompleted;
        
        /// <remarks/>
        public event GetReferrerHostsCountCompletedEventHandler GetReferrerHostsCountCompleted;
        
        /// <remarks/>
        public event GetReferrerHostsCompletedEventHandler GetReferrerHostsCompleted;
        
        /// <remarks/>
        public event DeleteReferrerHostCompletedEventHandler DeleteReferrerHostCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event GetLoginCompletedEventHandler GetLoginCompleted;
        
        /// <remarks/>
        public event GetLoginByIdCompletedEventHandler GetLoginByIdCompleted;
        
        /// <remarks/>
        public event GetLoginByUsernameCompletedEventHandler GetLoginByUsernameCompleted;
        
        /// <remarks/>
        public event ResetLoginPasswordEmailCompletedEventHandler ResetLoginPasswordEmailCompleted;
        
        /// <remarks/>
        public event ResetLoginPasswordCompletedEventHandler ResetLoginPasswordCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateLoginCompletedEventHandler CreateOrUpdateLoginCompleted;
        
        /// <remarks/>
        public event GetLoginsCountCompletedEventHandler GetLoginsCountCompleted;
        
        /// <remarks/>
        public event GetLoginsCompletedEventHandler GetLoginsCompleted;
        
        /// <remarks/>
        public event DeleteLoginCompletedEventHandler DeleteLoginCompleted;
        
        /// <remarks/>
        public event GetTopicByIdCompletedEventHandler GetTopicByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateTopicCompletedEventHandler CreateOrUpdateTopicCompleted;
        
        /// <remarks/>
        public event GetTopicsCountCompletedEventHandler GetTopicsCountCompleted;
        
        /// <remarks/>
        public event GetTopicsCompletedEventHandler GetTopicsCompleted;
        
        /// <remarks/>
        public event DeleteTopicCompletedEventHandler DeleteTopicCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateImageCompletedEventHandler CreateOrUpdateImageCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateImageAttributesCompletedEventHandler CreateOrUpdateImageAttributesCompleted;
        
        /// <remarks/>
        public event GetImageByIdCompletedEventHandler GetImageByIdCompleted;
        
        /// <remarks/>
        public event DeleteImageCompletedEventHandler DeleteImageCompleted;
        
        /// <remarks/>
        public event GetImagesCountCompletedEventHandler GetImagesCountCompleted;
        
        /// <remarks/>
        public event GetImagesCompletedEventHandler GetImagesCompleted;
        
        /// <remarks/>
        public event IncrementImageCounterCompletedEventHandler IncrementImageCounterCompleted;
        
        /// <remarks/>
        public event IncrementImageCountersCompletedEventHandler IncrementImageCountersCompleted;
        
        /// <remarks/>
        public event GetImageWithBitmapByIdCompletedEventHandler GetImageWithBitmapByIdCompleted;
        
        /// <remarks/>
        public event GetImageEXIFMetaDataByIdCompletedEventHandler GetImageEXIFMetaDataByIdCompleted;
        
        /// <remarks/>
        public event GetImageWithBitmapByIdIfModifiedSinceCompletedEventHandler GetImageWithBitmapByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetImageWithThumbnailByIdCompletedEventHandler GetImageWithThumbnailByIdCompleted;
        
        /// <remarks/>
        public event GetImageWithThumbnailByIdIfModifiedSinceCompletedEventHandler GetImageWithThumbnailByIdIfModifiedSinceCompleted;
        
        /// <remarks/>
        public event GetReferenceByIdCompletedEventHandler GetReferenceByIdCompleted;
        
        /// <remarks/>
        public event GetReferenceByWordCompletedEventHandler GetReferenceByWordCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferenceCompletedEventHandler CreateOrUpdateReferenceCompleted;
        
        /// <remarks/>
        public event GetReferencesCountCompletedEventHandler GetReferencesCountCompleted;
        
        /// <remarks/>
        public event GetReferencesCompletedEventHandler GetReferencesCompleted;
        
        /// <remarks/>
        public event SearchReferencesCompletedEventHandler SearchReferencesCompleted;
        
        /// <remarks/>
        public event SearchReferencesCountCompletedEventHandler SearchReferencesCountCompleted;
        
        /// <remarks/>
        public event DeleteReferenceCompletedEventHandler DeleteReferenceCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupByIdCompletedEventHandler GetReferrerHostRollupByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferrerHostRollupCompletedEventHandler CreateOrUpdateReferrerHostRollupCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupsCountCompletedEventHandler GetReferrerHostRollupsCountCompleted;
        
        /// <remarks/>
        public event GetReferrerHostRollupsCompletedEventHandler GetReferrerHostRollupsCompleted;
        
        /// <remarks/>
        public event DeleteReferrerHostRollupCompletedEventHandler DeleteReferrerHostRollupCompleted;
        
        /// <remarks/>
        public event GetReferrerSearchQueryByIdCompletedEventHandler GetReferrerSearchQueryByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateReferrerSearchQueryCompletedEventHandler CreateOrUpdateReferrerSearchQueryCompleted;
        
        /// <remarks/>
        public event GetReferrerSearchQueriesCountCompletedEventHandler GetReferrerSearchQueriesCountCompleted;
        
        /// <remarks/>
        public event GetReferrerSearchQueriesCompletedEventHandler GetReferrerSearchQueriesCompleted;
        
        /// <remarks/>
        public event DeleteReferrerSearchQueryCompletedEventHandler DeleteReferrerSearchQueryCompleted;
        
        /// <remarks/>
        public event GetHighlightByIdCompletedEventHandler GetHighlightByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateHighlightCompletedEventHandler CreateOrUpdateHighlightCompleted;
        
        /// <remarks/>
        public event GetHighlightsCountCompletedEventHandler GetHighlightsCountCompleted;
        
        /// <remarks/>
        public event GetHighlightsCompletedEventHandler GetHighlightsCompleted;
        
        /// <remarks/>
        public event DeleteHighlightCompletedEventHandler DeleteHighlightCompleted;
        
        /// <remarks/>
        public event GetPostByIdCompletedEventHandler GetPostByIdCompleted;
        
        /// <remarks/>
        public event HasAccessToPostCompletedEventHandler HasAccessToPostCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePostCompletedEventHandler CreateOrUpdatePostCompleted;
        
        /// <remarks/>
        public event GetPostsCountCompletedEventHandler GetPostsCountCompleted;
        
        /// <remarks/>
        public event GetPostsCompletedEventHandler GetPostsCompleted;
        
        /// <remarks/>
        public event GetPostsCountExCompletedEventHandler GetPostsCountExCompleted;
        
        /// <remarks/>
        public event GetPostsExCompletedEventHandler GetPostsExCompleted;
        
        /// <remarks/>
        public event DeletePostCompletedEventHandler DeletePostCompleted;
        
        /// <remarks/>
        public event IncrementPostCounterCompletedEventHandler IncrementPostCounterCompleted;
        
        /// <remarks/>
        public event IncrementPostCountersCompletedEventHandler IncrementPostCountersCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateStatsCompletedEventHandler CreateOrUpdateStatsCompleted;
        
        /// <remarks/>
        public event GetStatsCompletedEventHandler GetStatsCompleted;
        
        /// <remarks/>
        public event GetStatsSummaryCompletedEventHandler GetStatsSummaryCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePostImageCompletedEventHandler CreateOrUpdatePostImageCompleted;
        
        /// <remarks/>
        public event GetPostImageByIdCompletedEventHandler GetPostImageByIdCompleted;
        
        /// <remarks/>
        public event DeletePostImageCompletedEventHandler DeletePostImageCompleted;
        
        /// <remarks/>
        public event GetPostImagesCountCompletedEventHandler GetPostImagesCountCompleted;
        
        /// <remarks/>
        public event GetPostImagesCompletedEventHandler GetPostImagesCompleted;
        
        /// <remarks/>
        public event GetPostImagesCountExCompletedEventHandler GetPostImagesCountExCompleted;
        
        /// <remarks/>
        public event GetPostImagesExCompletedEventHandler GetPostImagesExCompleted;
        
        /// <remarks/>
        public event GetPermalinkByIdCompletedEventHandler GetPermalinkByIdCompleted;
        
        /// <remarks/>
        public event GetPermalinkBySourceCompletedEventHandler GetPermalinkBySourceCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePermalinkCompletedEventHandler CreateOrUpdatePermalinkCompleted;
        
        /// <remarks/>
        public event GetPermalinksCountCompletedEventHandler GetPermalinksCountCompleted;
        
        /// <remarks/>
        public event GetPermalinksCompletedEventHandler GetPermalinksCompleted;
        
        /// <remarks/>
        public event DeletePermalinkCompletedEventHandler DeletePermalinkCompleted;
        
        /// <remarks/>
        public event GetCommentByIdCompletedEventHandler GetCommentByIdCompleted;
        
        /// <remarks/>
        public event CreateOrUpdateCommentCompletedEventHandler CreateOrUpdateCommentCompleted;
        
        /// <remarks/>
        public event GetCommentsCountCompletedEventHandler GetCommentsCountCompleted;
        
        /// <remarks/>
        public event GetCommentsCompletedEventHandler GetCommentsCompleted;
        
        /// <remarks/>
        public event DeleteCommentCompletedEventHandler DeleteCommentCompleted;
        
        /// <remarks/>
        public event CreateOrUpdatePostCommentCompletedEventHandler CreateOrUpdatePostCommentCompleted;
        
        /// <remarks/>
        public event GetVersionCompletedEventHandler GetVersionCompleted;
        
        /// <remarks/>
        public event GetTitleCompletedEventHandler GetTitleCompleted;
        
        /// <remarks/>
        public event GetCopyrightCompletedEventHandler GetCopyrightCompleted;
        
        /// <remarks/>
        public event GetDescriptionCompletedEventHandler GetDescriptionCompleted;
        
        /// <remarks/>
        public event GetUptimeCompletedEventHandler GetUptimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostCommentById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostComment GetPostCommentById(string ticket, int id) {
            object[] results = this.Invoke("GetPostCommentById", new object[] {
                        ticket,
                        id});
            return ((TransitPostComment)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostCommentByIdAsync(string ticket, int id) {
            this.GetPostCommentByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPostCommentByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPostCommentByIdOperationCompleted == null)) {
                this.GetPostCommentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostCommentByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostCommentById", new object[] {
                        ticket,
                        id}, this.GetPostCommentByIdOperationCompleted, userState);
        }
        
        private void OnGetPostCommentByIdOperationCompleted(object arg) {
            if ((this.GetPostCommentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostCommentByIdCompleted(this, new GetPostCommentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeletePostComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePostComment(string ticket, int id) {
            this.Invoke("DeletePostComment", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePostCommentAsync(string ticket, int id) {
            this.DeletePostCommentAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePostCommentAsync(string ticket, int id, object userState) {
            if ((this.DeletePostCommentOperationCompleted == null)) {
                this.DeletePostCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostCommentOperationCompleted);
            }
            this.InvokeAsync("DeletePostComment", new object[] {
                        ticket,
                        id}, this.DeletePostCommentOperationCompleted, userState);
        }
        
        private void OnDeletePostCommentOperationCompleted(object arg) {
            if ((this.DeletePostCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostCommentsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostCommentsCount(string ticket, TransitPostCommentQueryOptions options) {
            object[] results = this.Invoke("GetPostCommentsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostCommentsCountAsync(string ticket, TransitPostCommentQueryOptions options) {
            this.GetPostCommentsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostCommentsCountAsync(string ticket, TransitPostCommentQueryOptions options, object userState) {
            if ((this.GetPostCommentsCountOperationCompleted == null)) {
                this.GetPostCommentsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostCommentsCountOperationCompleted);
            }
            this.InvokeAsync("GetPostCommentsCount", new object[] {
                        ticket,
                        options}, this.GetPostCommentsCountOperationCompleted, userState);
        }
        
        private void OnGetPostCommentsCountOperationCompleted(object arg) {
            if ((this.GetPostCommentsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostCommentsCountCompleted(this, new GetPostCommentsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetAssociatedComments", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitAssociatedComment[] GetAssociatedComments(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetAssociatedComments", new object[] {
                        ticket,
                        options});
            return ((TransitAssociatedComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedCommentsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetAssociatedCommentsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAssociatedCommentsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetAssociatedCommentsOperationCompleted == null)) {
                this.GetAssociatedCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedCommentsOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedComments", new object[] {
                        ticket,
                        options}, this.GetAssociatedCommentsOperationCompleted, userState);
        }
        
        private void OnGetAssociatedCommentsOperationCompleted(object arg) {
            if ((this.GetAssociatedCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedCommentsCompleted(this, new GetAssociatedCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetAssociatedCommentsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAssociatedCommentsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetAssociatedCommentsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatedCommentsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetAssociatedCommentsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetAssociatedCommentsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetAssociatedCommentsCountOperationCompleted == null)) {
                this.GetAssociatedCommentsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatedCommentsCountOperationCompleted);
            }
            this.InvokeAsync("GetAssociatedCommentsCount", new object[] {
                        ticket,
                        options}, this.GetAssociatedCommentsCountOperationCompleted, userState);
        }
        
        private void OnGetAssociatedCommentsCountOperationCompleted(object arg) {
            if ((this.GetAssociatedCommentsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatedCommentsCountCompleted(this, new GetAssociatedCommentsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostComments", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostComment[] GetPostComments(string ticket, TransitPostCommentQueryOptions options) {
            object[] results = this.Invoke("GetPostComments", new object[] {
                        ticket,
                        options});
            return ((TransitPostComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostCommentsAsync(string ticket, TransitPostCommentQueryOptions options) {
            this.GetPostCommentsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostCommentsAsync(string ticket, TransitPostCommentQueryOptions options, object userState) {
            if ((this.GetPostCommentsOperationCompleted == null)) {
                this.GetPostCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostCommentsOperationCompleted);
            }
            this.InvokeAsync("GetPostComments", new object[] {
                        ticket,
                        options}, this.GetPostCommentsOperationCompleted, userState);
        }
        
        private void OnGetPostCommentsOperationCompleted(object arg) {
            if ((this.GetPostCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostCommentsCompleted(this, new GetPostCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateImageComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateImageComment(string ticket, int image_id, TransitComment t_comment) {
            object[] results = this.Invoke("CreateOrUpdateImageComment", new object[] {
                        ticket,
                        image_id,
                        t_comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageCommentAsync(string ticket, int image_id, TransitComment t_comment) {
            this.CreateOrUpdateImageCommentAsync(ticket, image_id, t_comment, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageCommentAsync(string ticket, int image_id, TransitComment t_comment, object userState) {
            if ((this.CreateOrUpdateImageCommentOperationCompleted == null)) {
                this.CreateOrUpdateImageCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateImageCommentOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateImageComment", new object[] {
                        ticket,
                        image_id,
                        t_comment}, this.CreateOrUpdateImageCommentOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateImageCommentOperationCompleted(object arg) {
            if ((this.CreateOrUpdateImageCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateImageCommentCompleted(this, new CreateOrUpdateImageCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageCommentById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImageComment GetImageCommentById(string ticket, int id) {
            object[] results = this.Invoke("GetImageCommentById", new object[] {
                        ticket,
                        id});
            return ((TransitImageComment)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageCommentByIdAsync(string ticket, int id) {
            this.GetImageCommentByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageCommentByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageCommentByIdOperationCompleted == null)) {
                this.GetImageCommentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageCommentByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageCommentById", new object[] {
                        ticket,
                        id}, this.GetImageCommentByIdOperationCompleted, userState);
        }
        
        private void OnGetImageCommentByIdOperationCompleted(object arg) {
            if ((this.GetImageCommentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCommentByIdCompleted(this, new GetImageCommentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteImageComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImageComment(string ticket, int id) {
            this.Invoke("DeleteImageComment", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteImageCommentAsync(string ticket, int id) {
            this.DeleteImageCommentAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteImageCommentAsync(string ticket, int id, object userState) {
            if ((this.DeleteImageCommentOperationCompleted == null)) {
                this.DeleteImageCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteImageComment", new object[] {
                        ticket,
                        id}, this.DeleteImageCommentOperationCompleted, userState);
        }
        
        private void OnDeleteImageCommentOperationCompleted(object arg) {
            if ((this.DeleteImageCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageCommentsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetImageCommentsCount(string ticket, TransitImageCommentQueryOptions options) {
            object[] results = this.Invoke("GetImageCommentsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageCommentsCountAsync(string ticket, TransitImageCommentQueryOptions options) {
            this.GetImageCommentsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImageCommentsCountAsync(string ticket, TransitImageCommentQueryOptions options, object userState) {
            if ((this.GetImageCommentsCountOperationCompleted == null)) {
                this.GetImageCommentsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageCommentsCountOperationCompleted);
            }
            this.InvokeAsync("GetImageCommentsCount", new object[] {
                        ticket,
                        options}, this.GetImageCommentsCountOperationCompleted, userState);
        }
        
        private void OnGetImageCommentsCountOperationCompleted(object arg) {
            if ((this.GetImageCommentsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCommentsCountCompleted(this, new GetImageCommentsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageComments", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImageComment[] GetImageComments(string ticket, TransitImageCommentQueryOptions options) {
            object[] results = this.Invoke("GetImageComments", new object[] {
                        ticket,
                        options});
            return ((TransitImageComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImageCommentsAsync(string ticket, TransitImageCommentQueryOptions options) {
            this.GetImageCommentsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImageCommentsAsync(string ticket, TransitImageCommentQueryOptions options, object userState) {
            if ((this.GetImageCommentsOperationCompleted == null)) {
                this.GetImageCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageCommentsOperationCompleted);
            }
            this.InvokeAsync("GetImageComments", new object[] {
                        ticket,
                        options}, this.GetImageCommentsOperationCompleted, userState);
        }
        
        private void OnGetImageCommentsOperationCompleted(object arg) {
            if ((this.GetImageCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageCommentsCompleted(this, new GetImageCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementCounters", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IncrementCounters(string ticket, int count) {
            this.Invoke("IncrementCounters", new object[] {
                        ticket,
                        count});
        }
        
        /// <remarks/>
        public void IncrementCountersAsync(string ticket, int count) {
            this.IncrementCountersAsync(ticket, count, null);
        }
        
        /// <remarks/>
        public void IncrementCountersAsync(string ticket, int count, object userState) {
            if ((this.IncrementCountersOperationCompleted == null)) {
                this.IncrementCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementCountersOperationCompleted);
            }
            this.InvokeAsync("IncrementCounters", new object[] {
                        ticket,
                        count}, this.IncrementCountersOperationCompleted, userState);
        }
        
        private void OnIncrementCountersOperationCompleted(object arg) {
            if ((this.IncrementCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementCountersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementNamedCounter", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void IncrementNamedCounter(string ticket, string name, int count) {
            this.Invoke("IncrementNamedCounter", new object[] {
                        ticket,
                        name,
                        count});
        }
        
        /// <remarks/>
        public void IncrementNamedCounterAsync(string ticket, string name, int count) {
            this.IncrementNamedCounterAsync(ticket, name, count, null);
        }
        
        /// <remarks/>
        public void IncrementNamedCounterAsync(string ticket, string name, int count, object userState) {
            if ((this.IncrementNamedCounterOperationCompleted == null)) {
                this.IncrementNamedCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementNamedCounterOperationCompleted);
            }
            this.InvokeAsync("IncrementNamedCounter", new object[] {
                        ticket,
                        name,
                        count}, this.IncrementNamedCounterOperationCompleted, userState);
        }
        
        private void OnIncrementNamedCounterOperationCompleted(object arg) {
            if ((this.IncrementNamedCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementNamedCounterCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHourlyCountSum", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitCounter GetHourlyCountSum(string ticket) {
            object[] results = this.Invoke("GetHourlyCountSum", new object[] {
                        ticket});
            return ((TransitCounter)(results[0]));
        }
        
        /// <remarks/>
        public void GetHourlyCountSumAsync(string ticket) {
            this.GetHourlyCountSumAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetHourlyCountSumAsync(string ticket, object userState) {
            if ((this.GetHourlyCountSumOperationCompleted == null)) {
                this.GetHourlyCountSumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHourlyCountSumOperationCompleted);
            }
            this.InvokeAsync("GetHourlyCountSum", new object[] {
                        ticket}, this.GetHourlyCountSumOperationCompleted, userState);
        }
        
        private void OnGetHourlyCountSumOperationCompleted(object arg) {
            if ((this.GetHourlyCountSumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHourlyCountSumCompleted(this, new GetHourlyCountSumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeedById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitFeed GetFeedById(string ticket, int id) {
            object[] results = this.Invoke("GetFeedById", new object[] {
                        ticket,
                        id});
            return ((TransitFeed)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedByIdAsync(string ticket, int id) {
            this.GetFeedByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetFeedByIdAsync(string ticket, int id, object userState) {
            if ((this.GetFeedByIdOperationCompleted == null)) {
                this.GetFeedByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedByIdOperationCompleted);
            }
            this.InvokeAsync("GetFeedById", new object[] {
                        ticket,
                        id}, this.GetFeedByIdOperationCompleted, userState);
        }
        
        private void OnGetFeedByIdOperationCompleted(object arg) {
            if ((this.GetFeedByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedByIdCompleted(this, new GetFeedByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateFeed", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateFeed(string ticket, TransitFeed t_feed) {
            object[] results = this.Invoke("CreateOrUpdateFeed", new object[] {
                        ticket,
                        t_feed});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateFeedAsync(string ticket, TransitFeed t_feed) {
            this.CreateOrUpdateFeedAsync(ticket, t_feed, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateFeedAsync(string ticket, TransitFeed t_feed, object userState) {
            if ((this.CreateOrUpdateFeedOperationCompleted == null)) {
                this.CreateOrUpdateFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateFeedOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateFeed", new object[] {
                        ticket,
                        t_feed}, this.CreateOrUpdateFeedOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateFeedOperationCompleted(object arg) {
            if ((this.CreateOrUpdateFeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateFeedCompleted(this, new CreateOrUpdateFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeedsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFeedsCount(string ticket, TransitFeedQueryOptions options) {
            object[] results = this.Invoke("GetFeedsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedsCountAsync(string ticket, TransitFeedQueryOptions options) {
            this.GetFeedsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetFeedsCountAsync(string ticket, TransitFeedQueryOptions options, object userState) {
            if ((this.GetFeedsCountOperationCompleted == null)) {
                this.GetFeedsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedsCountOperationCompleted);
            }
            this.InvokeAsync("GetFeedsCount", new object[] {
                        ticket,
                        options}, this.GetFeedsCountOperationCompleted, userState);
        }
        
        private void OnGetFeedsCountOperationCompleted(object arg) {
            if ((this.GetFeedsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedsCountCompleted(this, new GetFeedsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeeds", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitFeed[] GetFeeds(string ticket, TransitFeedQueryOptions options) {
            object[] results = this.Invoke("GetFeeds", new object[] {
                        ticket,
                        options});
            return ((TransitFeed[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedsAsync(string ticket, TransitFeedQueryOptions options) {
            this.GetFeedsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetFeedsAsync(string ticket, TransitFeedQueryOptions options, object userState) {
            if ((this.GetFeedsOperationCompleted == null)) {
                this.GetFeedsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedsOperationCompleted);
            }
            this.InvokeAsync("GetFeeds", new object[] {
                        ticket,
                        options}, this.GetFeedsOperationCompleted, userState);
        }
        
        private void OnGetFeedsOperationCompleted(object arg) {
            if ((this.GetFeedsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedsCompleted(this, new GetFeedsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteFeed", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFeed(string ticket, int id) {
            this.Invoke("DeleteFeed", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteFeedAsync(string ticket, int id) {
            this.DeleteFeedAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteFeedAsync(string ticket, int id, object userState) {
            if ((this.DeleteFeedOperationCompleted == null)) {
                this.DeleteFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFeedOperationCompleted);
            }
            this.InvokeAsync("DeleteFeed", new object[] {
                        ticket,
                        id}, this.DeleteFeedOperationCompleted, userState);
        }
        
        private void OnDeleteFeedOperationCompleted(object arg) {
            if ((this.DeleteFeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFeedCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/UpdateFeed", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateFeed(string ticket, int id) {
            object[] results = this.Invoke("UpdateFeed", new object[] {
                        ticket,
                        id});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFeedAsync(string ticket, int id) {
            this.UpdateFeedAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void UpdateFeedAsync(string ticket, int id, object userState) {
            if ((this.UpdateFeedOperationCompleted == null)) {
                this.UpdateFeedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFeedOperationCompleted);
            }
            this.InvokeAsync("UpdateFeed", new object[] {
                        ticket,
                        id}, this.UpdateFeedOperationCompleted, userState);
        }
        
        private void OnUpdateFeedOperationCompleted(object arg) {
            if ((this.UpdateFeedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFeedCompleted(this, new UpdateFeedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeedItemById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitFeedItem GetFeedItemById(string ticket, int id) {
            object[] results = this.Invoke("GetFeedItemById", new object[] {
                        ticket,
                        id});
            return ((TransitFeedItem)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedItemByIdAsync(string ticket, int id) {
            this.GetFeedItemByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetFeedItemByIdAsync(string ticket, int id, object userState) {
            if ((this.GetFeedItemByIdOperationCompleted == null)) {
                this.GetFeedItemByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedItemByIdOperationCompleted);
            }
            this.InvokeAsync("GetFeedItemById", new object[] {
                        ticket,
                        id}, this.GetFeedItemByIdOperationCompleted, userState);
        }
        
        private void OnGetFeedItemByIdOperationCompleted(object arg) {
            if ((this.GetFeedItemByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedItemByIdCompleted(this, new GetFeedItemByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateFeedItem", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateFeedItem(string ticket, TransitFeedItem t_feeditem) {
            object[] results = this.Invoke("CreateOrUpdateFeedItem", new object[] {
                        ticket,
                        t_feeditem});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateFeedItemAsync(string ticket, TransitFeedItem t_feeditem) {
            this.CreateOrUpdateFeedItemAsync(ticket, t_feeditem, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateFeedItemAsync(string ticket, TransitFeedItem t_feeditem, object userState) {
            if ((this.CreateOrUpdateFeedItemOperationCompleted == null)) {
                this.CreateOrUpdateFeedItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateFeedItemOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateFeedItem", new object[] {
                        ticket,
                        t_feeditem}, this.CreateOrUpdateFeedItemOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateFeedItemOperationCompleted(object arg) {
            if ((this.CreateOrUpdateFeedItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateFeedItemCompleted(this, new CreateOrUpdateFeedItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeedItemsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFeedItemsCount(string ticket, TransitFeedItemQueryOptions options) {
            object[] results = this.Invoke("GetFeedItemsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedItemsCountAsync(string ticket, TransitFeedItemQueryOptions options) {
            this.GetFeedItemsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetFeedItemsCountAsync(string ticket, TransitFeedItemQueryOptions options, object userState) {
            if ((this.GetFeedItemsCountOperationCompleted == null)) {
                this.GetFeedItemsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedItemsCountOperationCompleted);
            }
            this.InvokeAsync("GetFeedItemsCount", new object[] {
                        ticket,
                        options}, this.GetFeedItemsCountOperationCompleted, userState);
        }
        
        private void OnGetFeedItemsCountOperationCompleted(object arg) {
            if ((this.GetFeedItemsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedItemsCountCompleted(this, new GetFeedItemsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetFeedItems", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitFeedItem[] GetFeedItems(string ticket, TransitFeedItemQueryOptions options) {
            object[] results = this.Invoke("GetFeedItems", new object[] {
                        ticket,
                        options});
            return ((TransitFeedItem[])(results[0]));
        }
        
        /// <remarks/>
        public void GetFeedItemsAsync(string ticket, TransitFeedItemQueryOptions options) {
            this.GetFeedItemsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetFeedItemsAsync(string ticket, TransitFeedItemQueryOptions options, object userState) {
            if ((this.GetFeedItemsOperationCompleted == null)) {
                this.GetFeedItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFeedItemsOperationCompleted);
            }
            this.InvokeAsync("GetFeedItems", new object[] {
                        ticket,
                        options}, this.GetFeedItemsOperationCompleted, userState);
        }
        
        private void OnGetFeedItemsOperationCompleted(object arg) {
            if ((this.GetFeedItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFeedItemsCompleted(this, new GetFeedItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteFeedItem", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFeedItem(string ticket, int id) {
            this.Invoke("DeleteFeedItem", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteFeedItemAsync(string ticket, int id) {
            this.DeleteFeedItemAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteFeedItemAsync(string ticket, int id, object userState) {
            if ((this.DeleteFeedItemOperationCompleted == null)) {
                this.DeleteFeedItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFeedItemOperationCompleted);
            }
            this.InvokeAsync("DeleteFeedItem", new object[] {
                        ticket,
                        id}, this.DeleteFeedItemOperationCompleted, userState);
        }
        
        private void OnDeleteFeedItemOperationCompleted(object arg) {
            if ((this.DeleteFeedItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFeedItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdatePostLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePostLogin(string ticket, int post_id, TransitLogin t_login) {
            object[] results = this.Invoke("CreateOrUpdatePostLogin", new object[] {
                        ticket,
                        post_id,
                        t_login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostLoginAsync(string ticket, int post_id, TransitLogin t_login) {
            this.CreateOrUpdatePostLoginAsync(ticket, post_id, t_login, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostLoginAsync(string ticket, int post_id, TransitLogin t_login, object userState) {
            if ((this.CreateOrUpdatePostLoginOperationCompleted == null)) {
                this.CreateOrUpdatePostLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePostLoginOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePostLogin", new object[] {
                        ticket,
                        post_id,
                        t_login}, this.CreateOrUpdatePostLoginOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePostLoginOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePostLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePostLoginCompleted(this, new CreateOrUpdatePostLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostLoginById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostLogin GetPostLoginById(string ticket, int id) {
            object[] results = this.Invoke("GetPostLoginById", new object[] {
                        ticket,
                        id});
            return ((TransitPostLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostLoginByIdAsync(string ticket, int id) {
            this.GetPostLoginByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPostLoginByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPostLoginByIdOperationCompleted == null)) {
                this.GetPostLoginByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostLoginByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostLoginById", new object[] {
                        ticket,
                        id}, this.GetPostLoginByIdOperationCompleted, userState);
        }
        
        private void OnGetPostLoginByIdOperationCompleted(object arg) {
            if ((this.GetPostLoginByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostLoginByIdCompleted(this, new GetPostLoginByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeletePostLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePostLogin(string ticket, int id) {
            this.Invoke("DeletePostLogin", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePostLoginAsync(string ticket, int id) {
            this.DeletePostLoginAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePostLoginAsync(string ticket, int id, object userState) {
            if ((this.DeletePostLoginOperationCompleted == null)) {
                this.DeletePostLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostLoginOperationCompleted);
            }
            this.InvokeAsync("DeletePostLogin", new object[] {
                        ticket,
                        id}, this.DeletePostLoginOperationCompleted, userState);
        }
        
        private void OnDeletePostLoginOperationCompleted(object arg) {
            if ((this.DeletePostLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostLoginsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostLoginsCount(string ticket, TransitPostLoginQueryOptions options) {
            object[] results = this.Invoke("GetPostLoginsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostLoginsCountAsync(string ticket, TransitPostLoginQueryOptions options) {
            this.GetPostLoginsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostLoginsCountAsync(string ticket, TransitPostLoginQueryOptions options, object userState) {
            if ((this.GetPostLoginsCountOperationCompleted == null)) {
                this.GetPostLoginsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostLoginsCountOperationCompleted);
            }
            this.InvokeAsync("GetPostLoginsCount", new object[] {
                        ticket,
                        options}, this.GetPostLoginsCountOperationCompleted, userState);
        }
        
        private void OnGetPostLoginsCountOperationCompleted(object arg) {
            if ((this.GetPostLoginsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostLoginsCountCompleted(this, new GetPostLoginsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostLogins", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostLogin[] GetPostLogins(string ticket, TransitPostLoginQueryOptions options) {
            object[] results = this.Invoke("GetPostLogins", new object[] {
                        ticket,
                        options});
            return ((TransitPostLogin[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostLoginsAsync(string ticket, TransitPostLoginQueryOptions options) {
            this.GetPostLoginsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostLoginsAsync(string ticket, TransitPostLoginQueryOptions options, object userState) {
            if ((this.GetPostLoginsOperationCompleted == null)) {
                this.GetPostLoginsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostLoginsOperationCompleted);
            }
            this.InvokeAsync("GetPostLogins", new object[] {
                        ticket,
                        options}, this.GetPostLoginsOperationCompleted, userState);
        }
        
        private void OnGetPostLoginsOperationCompleted(object arg) {
            if ((this.GetPostLoginsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostLoginsCompleted(this, new GetPostLoginsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBrowserById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBrowser GetBrowserById(string ticket, int id) {
            object[] results = this.Invoke("GetBrowserById", new object[] {
                        ticket,
                        id});
            return ((TransitBrowser)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrowserByIdAsync(string ticket, int id) {
            this.GetBrowserByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetBrowserByIdAsync(string ticket, int id, object userState) {
            if ((this.GetBrowserByIdOperationCompleted == null)) {
                this.GetBrowserByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrowserByIdOperationCompleted);
            }
            this.InvokeAsync("GetBrowserById", new object[] {
                        ticket,
                        id}, this.GetBrowserByIdOperationCompleted, userState);
        }
        
        private void OnGetBrowserByIdOperationCompleted(object arg) {
            if ((this.GetBrowserByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrowserByIdCompleted(this, new GetBrowserByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateBrowser", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateBrowser(string ticket, TransitBrowser t_browser) {
            object[] results = this.Invoke("CreateOrUpdateBrowser", new object[] {
                        ticket,
                        t_browser});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateBrowserAsync(string ticket, TransitBrowser t_browser) {
            this.CreateOrUpdateBrowserAsync(ticket, t_browser, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateBrowserAsync(string ticket, TransitBrowser t_browser, object userState) {
            if ((this.CreateOrUpdateBrowserOperationCompleted == null)) {
                this.CreateOrUpdateBrowserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateBrowserOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateBrowser", new object[] {
                        ticket,
                        t_browser}, this.CreateOrUpdateBrowserOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateBrowserOperationCompleted(object arg) {
            if ((this.CreateOrUpdateBrowserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateBrowserCompleted(this, new CreateOrUpdateBrowserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementBrowserCounter", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IncrementBrowserCounter(string ticket, int id) {
            object[] results = this.Invoke("IncrementBrowserCounter", new object[] {
                        ticket,
                        id});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementBrowserCounterAsync(string ticket, int id) {
            this.IncrementBrowserCounterAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void IncrementBrowserCounterAsync(string ticket, int id, object userState) {
            if ((this.IncrementBrowserCounterOperationCompleted == null)) {
                this.IncrementBrowserCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementBrowserCounterOperationCompleted);
            }
            this.InvokeAsync("IncrementBrowserCounter", new object[] {
                        ticket,
                        id}, this.IncrementBrowserCounterOperationCompleted, userState);
        }
        
        private void OnIncrementBrowserCounterOperationCompleted(object arg) {
            if ((this.IncrementBrowserCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementBrowserCounterCompleted(this, new IncrementBrowserCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBrowsersCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetBrowsersCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetBrowsersCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetBrowsersCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetBrowsersCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBrowsersCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetBrowsersCountOperationCompleted == null)) {
                this.GetBrowsersCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrowsersCountOperationCompleted);
            }
            this.InvokeAsync("GetBrowsersCount", new object[] {
                        ticket,
                        options}, this.GetBrowsersCountOperationCompleted, userState);
        }
        
        private void OnGetBrowsersCountOperationCompleted(object arg) {
            if ((this.GetBrowsersCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrowsersCountCompleted(this, new GetBrowsersCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetBrowsers", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitBrowser[] GetBrowsers(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetBrowsers", new object[] {
                        ticket,
                        options});
            return ((TransitBrowser[])(results[0]));
        }
        
        /// <remarks/>
        public void GetBrowsersAsync(string ticket, WebServiceQueryOptions options) {
            this.GetBrowsersAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetBrowsersAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetBrowsersOperationCompleted == null)) {
                this.GetBrowsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBrowsersOperationCompleted);
            }
            this.InvokeAsync("GetBrowsers", new object[] {
                        ticket,
                        options}, this.GetBrowsersOperationCompleted, userState);
        }
        
        private void OnGetBrowsersOperationCompleted(object arg) {
            if ((this.GetBrowsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBrowsersCompleted(this, new GetBrowsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteBrowser", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteBrowser(string ticket, int id) {
            this.Invoke("DeleteBrowser", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteBrowserAsync(string ticket, int id) {
            this.DeleteBrowserAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteBrowserAsync(string ticket, int id, object userState) {
            if ((this.DeleteBrowserOperationCompleted == null)) {
                this.DeleteBrowserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBrowserOperationCompleted);
            }
            this.InvokeAsync("DeleteBrowser", new object[] {
                        ticket,
                        id}, this.DeleteBrowserOperationCompleted, userState);
        }
        
        private void OnDeleteBrowserOperationCompleted(object arg) {
            if ((this.DeleteBrowserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBrowserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHost GetReferrerHostById(string ticket, int id) {
            object[] results = this.Invoke("GetReferrerHostById", new object[] {
                        ticket,
                        id});
            return ((TransitReferrerHost)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostByIdAsync(string ticket, int id) {
            this.GetReferrerHostByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferrerHostByIdOperationCompleted == null)) {
                this.GetReferrerHostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostById", new object[] {
                        ticket,
                        id}, this.GetReferrerHostByIdOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostByIdOperationCompleted(object arg) {
            if ((this.GetReferrerHostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostByIdCompleted(this, new GetReferrerHostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReferrerHost", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReferrerHost(string ticket, TransitReferrerHost t_referrerhost) {
            object[] results = this.Invoke("CreateOrUpdateReferrerHost", new object[] {
                        ticket,
                        t_referrerhost});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostAsync(string ticket, TransitReferrerHost t_referrerhost) {
            this.CreateOrUpdateReferrerHostAsync(ticket, t_referrerhost, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostAsync(string ticket, TransitReferrerHost t_referrerhost, object userState) {
            if ((this.CreateOrUpdateReferrerHostOperationCompleted == null)) {
                this.CreateOrUpdateReferrerHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferrerHostOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReferrerHost", new object[] {
                        ticket,
                        t_referrerhost}, this.CreateOrUpdateReferrerHostOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferrerHostOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferrerHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferrerHostCompleted(this, new CreateOrUpdateReferrerHostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferrerHostsCount(string ticket, TransitReferrerHostQueryOptions options) {
            object[] results = this.Invoke("GetReferrerHostsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostsCountAsync(string ticket, TransitReferrerHostQueryOptions options) {
            this.GetReferrerHostsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostsCountAsync(string ticket, TransitReferrerHostQueryOptions options, object userState) {
            if ((this.GetReferrerHostsCountOperationCompleted == null)) {
                this.GetReferrerHostsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostsCountOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostsCount", new object[] {
                        ticket,
                        options}, this.GetReferrerHostsCountOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostsCountOperationCompleted(object arg) {
            if ((this.GetReferrerHostsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostsCountCompleted(this, new GetReferrerHostsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHosts", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHost[] GetReferrerHosts(string ticket, TransitReferrerHostQueryOptions options) {
            object[] results = this.Invoke("GetReferrerHosts", new object[] {
                        ticket,
                        options});
            return ((TransitReferrerHost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostsAsync(string ticket, TransitReferrerHostQueryOptions options) {
            this.GetReferrerHostsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostsAsync(string ticket, TransitReferrerHostQueryOptions options, object userState) {
            if ((this.GetReferrerHostsOperationCompleted == null)) {
                this.GetReferrerHostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostsOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHosts", new object[] {
                        ticket,
                        options}, this.GetReferrerHostsOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostsOperationCompleted(object arg) {
            if ((this.GetReferrerHostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostsCompleted(this, new GetReferrerHostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReferrerHost", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReferrerHost(string ticket, int id) {
            this.Invoke("DeleteReferrerHost", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferrerHostAsync(string ticket, int id) {
            this.DeleteReferrerHostAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferrerHostAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferrerHostOperationCompleted == null)) {
                this.DeleteReferrerHostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferrerHostOperationCompleted);
            }
            this.InvokeAsync("DeleteReferrerHost", new object[] {
                        ticket,
                        id}, this.DeleteReferrerHostOperationCompleted, userState);
        }
        
        private void OnDeleteReferrerHostOperationCompleted(object arg) {
            if ((this.DeleteReferrerHostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferrerHostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/Login", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin GetLogin(string ticket) {
            object[] results = this.Invoke("GetLogin", new object[] {
                        ticket});
            return ((TransitLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginAsync(string ticket) {
            this.GetLoginAsync(ticket, null);
        }
        
        /// <remarks/>
        public void GetLoginAsync(string ticket, object userState) {
            if ((this.GetLoginOperationCompleted == null)) {
                this.GetLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginOperationCompleted);
            }
            this.InvokeAsync("GetLogin", new object[] {
                        ticket}, this.GetLoginOperationCompleted, userState);
        }
        
        private void OnGetLoginOperationCompleted(object arg) {
            if ((this.GetLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginCompleted(this, new GetLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLoginById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin GetLoginById(string ticket, int id) {
            object[] results = this.Invoke("GetLoginById", new object[] {
                        ticket,
                        id});
            return ((TransitLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginByIdAsync(string ticket, int id) {
            this.GetLoginByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetLoginByIdAsync(string ticket, int id, object userState) {
            if ((this.GetLoginByIdOperationCompleted == null)) {
                this.GetLoginByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginByIdOperationCompleted);
            }
            this.InvokeAsync("GetLoginById", new object[] {
                        ticket,
                        id}, this.GetLoginByIdOperationCompleted, userState);
        }
        
        private void OnGetLoginByIdOperationCompleted(object arg) {
            if ((this.GetLoginByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginByIdCompleted(this, new GetLoginByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLoginByUsername", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin GetLoginByUsername(string ticket, string username) {
            object[] results = this.Invoke("GetLoginByUsername", new object[] {
                        ticket,
                        username});
            return ((TransitLogin)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginByUsernameAsync(string ticket, string username) {
            this.GetLoginByUsernameAsync(ticket, username, null);
        }
        
        /// <remarks/>
        public void GetLoginByUsernameAsync(string ticket, string username, object userState) {
            if ((this.GetLoginByUsernameOperationCompleted == null)) {
                this.GetLoginByUsernameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginByUsernameOperationCompleted);
            }
            this.InvokeAsync("GetLoginByUsername", new object[] {
                        ticket,
                        username}, this.GetLoginByUsernameOperationCompleted, userState);
        }
        
        private void OnGetLoginByUsernameOperationCompleted(object arg) {
            if ((this.GetLoginByUsernameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginByUsernameCompleted(this, new GetLoginByUsernameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/ResetLoginPasswordEmail", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ResetLoginPasswordEmail(string usernameOrEmail) {
            object[] results = this.Invoke("ResetLoginPasswordEmail", new object[] {
                        usernameOrEmail});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ResetLoginPasswordEmailAsync(string usernameOrEmail) {
            this.ResetLoginPasswordEmailAsync(usernameOrEmail, null);
        }
        
        /// <remarks/>
        public void ResetLoginPasswordEmailAsync(string usernameOrEmail, object userState) {
            if ((this.ResetLoginPasswordEmailOperationCompleted == null)) {
                this.ResetLoginPasswordEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetLoginPasswordEmailOperationCompleted);
            }
            this.InvokeAsync("ResetLoginPasswordEmail", new object[] {
                        usernameOrEmail}, this.ResetLoginPasswordEmailOperationCompleted, userState);
        }
        
        private void OnResetLoginPasswordEmailOperationCompleted(object arg) {
            if ((this.ResetLoginPasswordEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetLoginPasswordEmailCompleted(this, new ResetLoginPasswordEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/ResetLoginPassword", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void ResetLoginPassword(int id, string hash, string newPassword) {
            this.Invoke("ResetLoginPassword", new object[] {
                        id,
                        hash,
                        newPassword});
        }
        
        /// <remarks/>
        public void ResetLoginPasswordAsync(int id, string hash, string newPassword) {
            this.ResetLoginPasswordAsync(id, hash, newPassword, null);
        }
        
        /// <remarks/>
        public void ResetLoginPasswordAsync(int id, string hash, string newPassword, object userState) {
            if ((this.ResetLoginPasswordOperationCompleted == null)) {
                this.ResetLoginPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnResetLoginPasswordOperationCompleted);
            }
            this.InvokeAsync("ResetLoginPassword", new object[] {
                        id,
                        hash,
                        newPassword}, this.ResetLoginPasswordOperationCompleted, userState);
        }
        
        private void OnResetLoginPasswordOperationCompleted(object arg) {
            if ((this.ResetLoginPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ResetLoginPasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateLogin(string ticket, TransitLogin t_login) {
            object[] results = this.Invoke("CreateOrUpdateLogin", new object[] {
                        ticket,
                        t_login});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateLoginAsync(string ticket, TransitLogin t_login) {
            this.CreateOrUpdateLoginAsync(ticket, t_login, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateLoginAsync(string ticket, TransitLogin t_login, object userState) {
            if ((this.CreateOrUpdateLoginOperationCompleted == null)) {
                this.CreateOrUpdateLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateLoginOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateLogin", new object[] {
                        ticket,
                        t_login}, this.CreateOrUpdateLoginOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateLoginOperationCompleted(object arg) {
            if ((this.CreateOrUpdateLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateLoginCompleted(this, new CreateOrUpdateLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLoginsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetLoginsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetLoginsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetLoginsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetLoginsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetLoginsCountOperationCompleted == null)) {
                this.GetLoginsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginsCountOperationCompleted);
            }
            this.InvokeAsync("GetLoginsCount", new object[] {
                        ticket,
                        options}, this.GetLoginsCountOperationCompleted, userState);
        }
        
        private void OnGetLoginsCountOperationCompleted(object arg) {
            if ((this.GetLoginsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginsCountCompleted(this, new GetLoginsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetLogins", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitLogin[] GetLogins(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetLogins", new object[] {
                        ticket,
                        options});
            return ((TransitLogin[])(results[0]));
        }
        
        /// <remarks/>
        public void GetLoginsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetLoginsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetLoginsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetLoginsOperationCompleted == null)) {
                this.GetLoginsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLoginsOperationCompleted);
            }
            this.InvokeAsync("GetLogins", new object[] {
                        ticket,
                        options}, this.GetLoginsOperationCompleted, userState);
        }
        
        private void OnGetLoginsOperationCompleted(object arg) {
            if ((this.GetLoginsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLoginsCompleted(this, new GetLoginsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteLogin", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteLogin(string ticket, int id) {
            this.Invoke("DeleteLogin", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteLoginAsync(string ticket, int id) {
            this.DeleteLoginAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteLoginAsync(string ticket, int id, object userState) {
            if ((this.DeleteLoginOperationCompleted == null)) {
                this.DeleteLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLoginOperationCompleted);
            }
            this.InvokeAsync("DeleteLogin", new object[] {
                        ticket,
                        id}, this.DeleteLoginOperationCompleted, userState);
        }
        
        private void OnDeleteLoginOperationCompleted(object arg) {
            if ((this.DeleteLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLoginCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopicById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitTopic GetTopicById(string ticket, int id) {
            object[] results = this.Invoke("GetTopicById", new object[] {
                        ticket,
                        id});
            return ((TransitTopic)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicByIdAsync(string ticket, int id) {
            this.GetTopicByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetTopicByIdAsync(string ticket, int id, object userState) {
            if ((this.GetTopicByIdOperationCompleted == null)) {
                this.GetTopicByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicByIdOperationCompleted);
            }
            this.InvokeAsync("GetTopicById", new object[] {
                        ticket,
                        id}, this.GetTopicByIdOperationCompleted, userState);
        }
        
        private void OnGetTopicByIdOperationCompleted(object arg) {
            if ((this.GetTopicByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicByIdCompleted(this, new GetTopicByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateTopic", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateTopic(string ticket, TransitTopic t_topic) {
            object[] results = this.Invoke("CreateOrUpdateTopic", new object[] {
                        ticket,
                        t_topic});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateTopicAsync(string ticket, TransitTopic t_topic) {
            this.CreateOrUpdateTopicAsync(ticket, t_topic, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateTopicAsync(string ticket, TransitTopic t_topic, object userState) {
            if ((this.CreateOrUpdateTopicOperationCompleted == null)) {
                this.CreateOrUpdateTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateTopicOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateTopic", new object[] {
                        ticket,
                        t_topic}, this.CreateOrUpdateTopicOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateTopicOperationCompleted(object arg) {
            if ((this.CreateOrUpdateTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateTopicCompleted(this, new CreateOrUpdateTopicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopicsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetTopicsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetTopicsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetTopicsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetTopicsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetTopicsCountOperationCompleted == null)) {
                this.GetTopicsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicsCountOperationCompleted);
            }
            this.InvokeAsync("GetTopicsCount", new object[] {
                        ticket,
                        options}, this.GetTopicsCountOperationCompleted, userState);
        }
        
        private void OnGetTopicsCountOperationCompleted(object arg) {
            if ((this.GetTopicsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicsCountCompleted(this, new GetTopicsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTopics", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitTopic[] GetTopics(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetTopics", new object[] {
                        ticket,
                        options});
            return ((TransitTopic[])(results[0]));
        }
        
        /// <remarks/>
        public void GetTopicsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetTopicsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetTopicsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetTopicsOperationCompleted == null)) {
                this.GetTopicsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTopicsOperationCompleted);
            }
            this.InvokeAsync("GetTopics", new object[] {
                        ticket,
                        options}, this.GetTopicsOperationCompleted, userState);
        }
        
        private void OnGetTopicsOperationCompleted(object arg) {
            if ((this.GetTopicsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTopicsCompleted(this, new GetTopicsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteTopic", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteTopic(string ticket, int id) {
            this.Invoke("DeleteTopic", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string ticket, int id) {
            this.DeleteTopicAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteTopicAsync(string ticket, int id, object userState) {
            if ((this.DeleteTopicOperationCompleted == null)) {
                this.DeleteTopicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTopicOperationCompleted);
            }
            this.InvokeAsync("DeleteTopic", new object[] {
                        ticket,
                        id}, this.DeleteTopicOperationCompleted, userState);
        }
        
        private void OnDeleteTopicOperationCompleted(object arg) {
            if ((this.DeleteTopicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTopicCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateImage(string ticket, TransitImage t_image) {
            object[] results = this.Invoke("CreateOrUpdateImage", new object[] {
                        ticket,
                        t_image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAsync(string ticket, TransitImage t_image) {
            this.CreateOrUpdateImageAsync(ticket, t_image, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAsync(string ticket, TransitImage t_image, object userState) {
            if ((this.CreateOrUpdateImageOperationCompleted == null)) {
                this.CreateOrUpdateImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateImageOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateImage", new object[] {
                        ticket,
                        t_image}, this.CreateOrUpdateImageOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateImageOperationCompleted(object arg) {
            if ((this.CreateOrUpdateImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateImageCompleted(this, new CreateOrUpdateImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateImageAttributes", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateImageAttributes(string ticket, TransitImage t_image) {
            object[] results = this.Invoke("CreateOrUpdateImageAttributes", new object[] {
                        ticket,
                        t_image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAttributesAsync(string ticket, TransitImage t_image) {
            this.CreateOrUpdateImageAttributesAsync(ticket, t_image, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateImageAttributesAsync(string ticket, TransitImage t_image, object userState) {
            if ((this.CreateOrUpdateImageAttributesOperationCompleted == null)) {
                this.CreateOrUpdateImageAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateImageAttributesOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateImageAttributes", new object[] {
                        ticket,
                        t_image}, this.CreateOrUpdateImageAttributesOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateImageAttributesOperationCompleted(object arg) {
            if ((this.CreateOrUpdateImageAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateImageAttributesCompleted(this, new CreateOrUpdateImageAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageById(string ticket, int id) {
            object[] results = this.Invoke("GetImageById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageByIdAsync(string ticket, int id) {
            this.GetImageByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageByIdOperationCompleted == null)) {
                this.GetImageByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageById", new object[] {
                        ticket,
                        id}, this.GetImageByIdOperationCompleted, userState);
        }
        
        private void OnGetImageByIdOperationCompleted(object arg) {
            if ((this.GetImageByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageByIdCompleted(this, new GetImageByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteImage(string ticket, int id) {
            this.Invoke("DeleteImage", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string ticket, int id) {
            this.DeleteImageAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteImageAsync(string ticket, int id, object userState) {
            if ((this.DeleteImageOperationCompleted == null)) {
                this.DeleteImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteImageOperationCompleted);
            }
            this.InvokeAsync("DeleteImage", new object[] {
                        ticket,
                        id}, this.DeleteImageOperationCompleted, userState);
        }
        
        private void OnDeleteImageOperationCompleted(object arg) {
            if ((this.DeleteImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImagesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetImagesCount(string ticket, TransitImageQueryOptions options) {
            object[] results = this.Invoke("GetImagesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(string ticket, TransitImageQueryOptions options) {
            this.GetImagesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImagesCountAsync(string ticket, TransitImageQueryOptions options, object userState) {
            if ((this.GetImagesCountOperationCompleted == null)) {
                this.GetImagesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesCountOperationCompleted);
            }
            this.InvokeAsync("GetImagesCount", new object[] {
                        ticket,
                        options}, this.GetImagesCountOperationCompleted, userState);
        }
        
        private void OnGetImagesCountOperationCompleted(object arg) {
            if ((this.GetImagesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCountCompleted(this, new GetImagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImages", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage[] GetImages(string ticket, TransitImageQueryOptions options) {
            object[] results = this.Invoke("GetImages", new object[] {
                        ticket,
                        options});
            return ((TransitImage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetImagesAsync(string ticket, TransitImageQueryOptions options) {
            this.GetImagesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetImagesAsync(string ticket, TransitImageQueryOptions options, object userState) {
            if ((this.GetImagesOperationCompleted == null)) {
                this.GetImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImagesOperationCompleted);
            }
            this.InvokeAsync("GetImages", new object[] {
                        ticket,
                        options}, this.GetImagesOperationCompleted, userState);
        }
        
        private void OnGetImagesOperationCompleted(object arg) {
            if ((this.GetImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImagesCompleted(this, new GetImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementImageCounter", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IncrementImageCounter(string ticket, int id) {
            object[] results = this.Invoke("IncrementImageCounter", new object[] {
                        ticket,
                        id});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementImageCounterAsync(string ticket, int id) {
            this.IncrementImageCounterAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void IncrementImageCounterAsync(string ticket, int id, object userState) {
            if ((this.IncrementImageCounterOperationCompleted == null)) {
                this.IncrementImageCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementImageCounterOperationCompleted);
            }
            this.InvokeAsync("IncrementImageCounter", new object[] {
                        ticket,
                        id}, this.IncrementImageCounterOperationCompleted, userState);
        }
        
        private void OnIncrementImageCounterOperationCompleted(object arg) {
            if ((this.IncrementImageCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementImageCounterCompleted(this, new IncrementImageCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementImageCounters", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IncrementImageCounters(string ticket, int[] ids) {
            object[] results = this.Invoke("IncrementImageCounters", new object[] {
                        ticket,
                        ids});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementImageCountersAsync(string ticket, int[] ids) {
            this.IncrementImageCountersAsync(ticket, ids, null);
        }
        
        /// <remarks/>
        public void IncrementImageCountersAsync(string ticket, int[] ids, object userState) {
            if ((this.IncrementImageCountersOperationCompleted == null)) {
                this.IncrementImageCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementImageCountersOperationCompleted);
            }
            this.InvokeAsync("IncrementImageCounters", new object[] {
                        ticket,
                        ids}, this.IncrementImageCountersOperationCompleted, userState);
        }
        
        private void OnIncrementImageCountersOperationCompleted(object arg) {
            if ((this.IncrementImageCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementImageCountersCompleted(this, new IncrementImageCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithBitmapById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithBitmapById(string ticket, int id) {
            object[] results = this.Invoke("GetImageWithBitmapById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdAsync(string ticket, int id) {
            this.GetImageWithBitmapByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageWithBitmapByIdOperationCompleted == null)) {
                this.GetImageWithBitmapByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithBitmapByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageWithBitmapById", new object[] {
                        ticket,
                        id}, this.GetImageWithBitmapByIdOperationCompleted, userState);
        }
        
        private void OnGetImageWithBitmapByIdOperationCompleted(object arg) {
            if ((this.GetImageWithBitmapByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithBitmapByIdCompleted(this, new GetImageWithBitmapByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageEXIFMetaDataById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public EXIFMetaData GetImageEXIFMetaDataById(string ticket, int id) {
            object[] results = this.Invoke("GetImageEXIFMetaDataById", new object[] {
                        ticket,
                        id});
            return ((EXIFMetaData)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageEXIFMetaDataByIdAsync(string ticket, int id) {
            this.GetImageEXIFMetaDataByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageEXIFMetaDataByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageEXIFMetaDataByIdOperationCompleted == null)) {
                this.GetImageEXIFMetaDataByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageEXIFMetaDataByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageEXIFMetaDataById", new object[] {
                        ticket,
                        id}, this.GetImageEXIFMetaDataByIdOperationCompleted, userState);
        }
        
        private void OnGetImageEXIFMetaDataByIdOperationCompleted(object arg) {
            if ((this.GetImageEXIFMetaDataByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageEXIFMetaDataByIdCompleted(this, new GetImageEXIFMetaDataByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithBitmapByIdIfModifiedSince", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithBitmapByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetImageWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetImageWithBitmapByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetImageWithBitmapByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithBitmapByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetImageWithBitmapByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetImageWithBitmapByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetImageWithBitmapByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetImageWithBitmapByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithBitmapByIdIfModifiedSinceCompleted(this, new GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithThumbnailById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithThumbnailById(string ticket, int id) {
            object[] results = this.Invoke("GetImageWithThumbnailById", new object[] {
                        ticket,
                        id});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdAsync(string ticket, int id) {
            this.GetImageWithThumbnailByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdAsync(string ticket, int id, object userState) {
            if ((this.GetImageWithThumbnailByIdOperationCompleted == null)) {
                this.GetImageWithThumbnailByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithThumbnailByIdOperationCompleted);
            }
            this.InvokeAsync("GetImageWithThumbnailById", new object[] {
                        ticket,
                        id}, this.GetImageWithThumbnailByIdOperationCompleted, userState);
        }
        
        private void OnGetImageWithThumbnailByIdOperationCompleted(object arg) {
            if ((this.GetImageWithThumbnailByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithThumbnailByIdCompleted(this, new GetImageWithThumbnailByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetImageWithThumbnailByIdIfModifiedSince", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitImage GetImageWithThumbnailByIdIfModifiedSince(string ticket, int id, System.DateTime ifModifiedSince) {
            object[] results = this.Invoke("GetImageWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince});
            return ((TransitImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince) {
            this.GetImageWithThumbnailByIdIfModifiedSinceAsync(ticket, id, ifModifiedSince, null);
        }
        
        /// <remarks/>
        public void GetImageWithThumbnailByIdIfModifiedSinceAsync(string ticket, int id, System.DateTime ifModifiedSince, object userState) {
            if ((this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted == null)) {
                this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetImageWithThumbnailByIdIfModifiedSinceOperationCompleted);
            }
            this.InvokeAsync("GetImageWithThumbnailByIdIfModifiedSince", new object[] {
                        ticket,
                        id,
                        ifModifiedSince}, this.GetImageWithThumbnailByIdIfModifiedSinceOperationCompleted, userState);
        }
        
        private void OnGetImageWithThumbnailByIdIfModifiedSinceOperationCompleted(object arg) {
            if ((this.GetImageWithThumbnailByIdIfModifiedSinceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetImageWithThumbnailByIdIfModifiedSinceCompleted(this, new GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferenceById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference GetReferenceById(string ticket, int id) {
            object[] results = this.Invoke("GetReferenceById", new object[] {
                        ticket,
                        id});
            return ((TransitReference)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceByIdAsync(string ticket, int id) {
            this.GetReferenceByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferenceByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferenceByIdOperationCompleted == null)) {
                this.GetReferenceByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferenceById", new object[] {
                        ticket,
                        id}, this.GetReferenceByIdOperationCompleted, userState);
        }
        
        private void OnGetReferenceByIdOperationCompleted(object arg) {
            if ((this.GetReferenceByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceByIdCompleted(this, new GetReferenceByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferenceByWord", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference GetReferenceByWord(string ticket, string word) {
            object[] results = this.Invoke("GetReferenceByWord", new object[] {
                        ticket,
                        word});
            return ((TransitReference)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferenceByWordAsync(string ticket, string word) {
            this.GetReferenceByWordAsync(ticket, word, null);
        }
        
        /// <remarks/>
        public void GetReferenceByWordAsync(string ticket, string word, object userState) {
            if ((this.GetReferenceByWordOperationCompleted == null)) {
                this.GetReferenceByWordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferenceByWordOperationCompleted);
            }
            this.InvokeAsync("GetReferenceByWord", new object[] {
                        ticket,
                        word}, this.GetReferenceByWordOperationCompleted, userState);
        }
        
        private void OnGetReferenceByWordOperationCompleted(object arg) {
            if ((this.GetReferenceByWordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferenceByWordCompleted(this, new GetReferenceByWordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReference", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReference(string ticket, TransitReference t_reference) {
            object[] results = this.Invoke("CreateOrUpdateReference", new object[] {
                        ticket,
                        t_reference});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferenceAsync(string ticket, TransitReference t_reference) {
            this.CreateOrUpdateReferenceAsync(ticket, t_reference, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferenceAsync(string ticket, TransitReference t_reference, object userState) {
            if ((this.CreateOrUpdateReferenceOperationCompleted == null)) {
                this.CreateOrUpdateReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferenceOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReference", new object[] {
                        ticket,
                        t_reference}, this.CreateOrUpdateReferenceOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferenceOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferenceCompleted(this, new CreateOrUpdateReferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferencesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferencesCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferencesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferencesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferencesCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferencesCountOperationCompleted == null)) {
                this.GetReferencesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesCountOperationCompleted);
            }
            this.InvokeAsync("GetReferencesCount", new object[] {
                        ticket,
                        options}, this.GetReferencesCountOperationCompleted, userState);
        }
        
        private void OnGetReferencesCountOperationCompleted(object arg) {
            if ((this.GetReferencesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesCountCompleted(this, new GetReferencesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferences", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference[] GetReferences(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferences", new object[] {
                        ticket,
                        options});
            return ((TransitReference[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferencesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferencesAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferencesOperationCompleted == null)) {
                this.GetReferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferencesOperationCompleted);
            }
            this.InvokeAsync("GetReferences", new object[] {
                        ticket,
                        options}, this.GetReferencesOperationCompleted, userState);
        }
        
        private void OnGetReferencesOperationCompleted(object arg) {
            if ((this.GetReferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferencesCompleted(this, new GetReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/SearchReferences", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReference[] SearchReferences(string ticket, TransitReferenceQueryOptions options) {
            object[] results = this.Invoke("SearchReferences", new object[] {
                        ticket,
                        options});
            return ((TransitReference[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchReferencesAsync(string ticket, TransitReferenceQueryOptions options) {
            this.SearchReferencesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void SearchReferencesAsync(string ticket, TransitReferenceQueryOptions options, object userState) {
            if ((this.SearchReferencesOperationCompleted == null)) {
                this.SearchReferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchReferencesOperationCompleted);
            }
            this.InvokeAsync("SearchReferences", new object[] {
                        ticket,
                        options}, this.SearchReferencesOperationCompleted, userState);
        }
        
        private void OnSearchReferencesOperationCompleted(object arg) {
            if ((this.SearchReferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchReferencesCompleted(this, new SearchReferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/SearchReferencesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SearchReferencesCount(string ticket, TransitReferenceQueryOptions options) {
            object[] results = this.Invoke("SearchReferencesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SearchReferencesCountAsync(string ticket, TransitReferenceQueryOptions options) {
            this.SearchReferencesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void SearchReferencesCountAsync(string ticket, TransitReferenceQueryOptions options, object userState) {
            if ((this.SearchReferencesCountOperationCompleted == null)) {
                this.SearchReferencesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchReferencesCountOperationCompleted);
            }
            this.InvokeAsync("SearchReferencesCount", new object[] {
                        ticket,
                        options}, this.SearchReferencesCountOperationCompleted, userState);
        }
        
        private void OnSearchReferencesCountOperationCompleted(object arg) {
            if ((this.SearchReferencesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchReferencesCountCompleted(this, new SearchReferencesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReference", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReference(string ticket, int id) {
            this.Invoke("DeleteReference", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(string ticket, int id) {
            this.DeleteReferenceAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferenceAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferenceOperationCompleted == null)) {
                this.DeleteReferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferenceOperationCompleted);
            }
            this.InvokeAsync("DeleteReference", new object[] {
                        ticket,
                        id}, this.DeleteReferenceOperationCompleted, userState);
        }
        
        private void OnDeleteReferenceOperationCompleted(object arg) {
            if ((this.DeleteReferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferenceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollupById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHostRollup GetReferrerHostRollupById(string ticket, int id) {
            object[] results = this.Invoke("GetReferrerHostRollupById", new object[] {
                        ticket,
                        id});
            return ((TransitReferrerHostRollup)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupByIdAsync(string ticket, int id) {
            this.GetReferrerHostRollupByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferrerHostRollupByIdOperationCompleted == null)) {
                this.GetReferrerHostRollupByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollupById", new object[] {
                        ticket,
                        id}, this.GetReferrerHostRollupByIdOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupByIdOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupByIdCompleted(this, new GetReferrerHostRollupByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReferrerHostRollup", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReferrerHostRollup(string ticket, TransitReferrerHostRollup t_referrerhostrollup) {
            object[] results = this.Invoke("CreateOrUpdateReferrerHostRollup", new object[] {
                        ticket,
                        t_referrerhostrollup});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostRollupAsync(string ticket, TransitReferrerHostRollup t_referrerhostrollup) {
            this.CreateOrUpdateReferrerHostRollupAsync(ticket, t_referrerhostrollup, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerHostRollupAsync(string ticket, TransitReferrerHostRollup t_referrerhostrollup, object userState) {
            if ((this.CreateOrUpdateReferrerHostRollupOperationCompleted == null)) {
                this.CreateOrUpdateReferrerHostRollupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferrerHostRollupOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReferrerHostRollup", new object[] {
                        ticket,
                        t_referrerhostrollup}, this.CreateOrUpdateReferrerHostRollupOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferrerHostRollupOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferrerHostRollupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferrerHostRollupCompleted(this, new CreateOrUpdateReferrerHostRollupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollupsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferrerHostRollupsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferrerHostRollupsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferrerHostRollupsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferrerHostRollupsCountOperationCompleted == null)) {
                this.GetReferrerHostRollupsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupsCountOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollupsCount", new object[] {
                        ticket,
                        options}, this.GetReferrerHostRollupsCountOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupsCountOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupsCountCompleted(this, new GetReferrerHostRollupsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerHostRollups", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerHostRollup[] GetReferrerHostRollups(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferrerHostRollups", new object[] {
                        ticket,
                        options});
            return ((TransitReferrerHostRollup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferrerHostRollupsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerHostRollupsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferrerHostRollupsOperationCompleted == null)) {
                this.GetReferrerHostRollupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerHostRollupsOperationCompleted);
            }
            this.InvokeAsync("GetReferrerHostRollups", new object[] {
                        ticket,
                        options}, this.GetReferrerHostRollupsOperationCompleted, userState);
        }
        
        private void OnGetReferrerHostRollupsOperationCompleted(object arg) {
            if ((this.GetReferrerHostRollupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerHostRollupsCompleted(this, new GetReferrerHostRollupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReferrerHostRollup", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReferrerHostRollup(string ticket, int id) {
            this.Invoke("DeleteReferrerHostRollup", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferrerHostRollupAsync(string ticket, int id) {
            this.DeleteReferrerHostRollupAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferrerHostRollupAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferrerHostRollupOperationCompleted == null)) {
                this.DeleteReferrerHostRollupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferrerHostRollupOperationCompleted);
            }
            this.InvokeAsync("DeleteReferrerHostRollup", new object[] {
                        ticket,
                        id}, this.DeleteReferrerHostRollupOperationCompleted, userState);
        }
        
        private void OnDeleteReferrerHostRollupOperationCompleted(object arg) {
            if ((this.DeleteReferrerHostRollupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferrerHostRollupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerSearchQueryById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerSearchQuery GetReferrerSearchQueryById(string ticket, int id) {
            object[] results = this.Invoke("GetReferrerSearchQueryById", new object[] {
                        ticket,
                        id});
            return ((TransitReferrerSearchQuery)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueryByIdAsync(string ticket, int id) {
            this.GetReferrerSearchQueryByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueryByIdAsync(string ticket, int id, object userState) {
            if ((this.GetReferrerSearchQueryByIdOperationCompleted == null)) {
                this.GetReferrerSearchQueryByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerSearchQueryByIdOperationCompleted);
            }
            this.InvokeAsync("GetReferrerSearchQueryById", new object[] {
                        ticket,
                        id}, this.GetReferrerSearchQueryByIdOperationCompleted, userState);
        }
        
        private void OnGetReferrerSearchQueryByIdOperationCompleted(object arg) {
            if ((this.GetReferrerSearchQueryByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerSearchQueryByIdCompleted(this, new GetReferrerSearchQueryByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateReferrerSearchQuery", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateReferrerSearchQuery(string ticket, TransitReferrerSearchQuery t_referrersearchquery) {
            object[] results = this.Invoke("CreateOrUpdateReferrerSearchQuery", new object[] {
                        ticket,
                        t_referrersearchquery});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerSearchQueryAsync(string ticket, TransitReferrerSearchQuery t_referrersearchquery) {
            this.CreateOrUpdateReferrerSearchQueryAsync(ticket, t_referrersearchquery, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateReferrerSearchQueryAsync(string ticket, TransitReferrerSearchQuery t_referrersearchquery, object userState) {
            if ((this.CreateOrUpdateReferrerSearchQueryOperationCompleted == null)) {
                this.CreateOrUpdateReferrerSearchQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateReferrerSearchQueryOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateReferrerSearchQuery", new object[] {
                        ticket,
                        t_referrersearchquery}, this.CreateOrUpdateReferrerSearchQueryOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateReferrerSearchQueryOperationCompleted(object arg) {
            if ((this.CreateOrUpdateReferrerSearchQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateReferrerSearchQueryCompleted(this, new CreateOrUpdateReferrerSearchQueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerSearchQueriesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetReferrerSearchQueriesCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferrerSearchQueriesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueriesCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferrerSearchQueriesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueriesCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferrerSearchQueriesCountOperationCompleted == null)) {
                this.GetReferrerSearchQueriesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerSearchQueriesCountOperationCompleted);
            }
            this.InvokeAsync("GetReferrerSearchQueriesCount", new object[] {
                        ticket,
                        options}, this.GetReferrerSearchQueriesCountOperationCompleted, userState);
        }
        
        private void OnGetReferrerSearchQueriesCountOperationCompleted(object arg) {
            if ((this.GetReferrerSearchQueriesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerSearchQueriesCountCompleted(this, new GetReferrerSearchQueriesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetReferrerSearchQueries", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitReferrerSearchQuery[] GetReferrerSearchQueries(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetReferrerSearchQueries", new object[] {
                        ticket,
                        options});
            return ((TransitReferrerSearchQuery[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueriesAsync(string ticket, WebServiceQueryOptions options) {
            this.GetReferrerSearchQueriesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetReferrerSearchQueriesAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetReferrerSearchQueriesOperationCompleted == null)) {
                this.GetReferrerSearchQueriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReferrerSearchQueriesOperationCompleted);
            }
            this.InvokeAsync("GetReferrerSearchQueries", new object[] {
                        ticket,
                        options}, this.GetReferrerSearchQueriesOperationCompleted, userState);
        }
        
        private void OnGetReferrerSearchQueriesOperationCompleted(object arg) {
            if ((this.GetReferrerSearchQueriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReferrerSearchQueriesCompleted(this, new GetReferrerSearchQueriesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteReferrerSearchQuery", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteReferrerSearchQuery(string ticket, int id) {
            this.Invoke("DeleteReferrerSearchQuery", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteReferrerSearchQueryAsync(string ticket, int id) {
            this.DeleteReferrerSearchQueryAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteReferrerSearchQueryAsync(string ticket, int id, object userState) {
            if ((this.DeleteReferrerSearchQueryOperationCompleted == null)) {
                this.DeleteReferrerSearchQueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteReferrerSearchQueryOperationCompleted);
            }
            this.InvokeAsync("DeleteReferrerSearchQuery", new object[] {
                        ticket,
                        id}, this.DeleteReferrerSearchQueryOperationCompleted, userState);
        }
        
        private void OnDeleteReferrerSearchQueryOperationCompleted(object arg) {
            if ((this.DeleteReferrerSearchQueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteReferrerSearchQueryCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlightById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitHighlight GetHighlightById(string ticket, int id) {
            object[] results = this.Invoke("GetHighlightById", new object[] {
                        ticket,
                        id});
            return ((TransitHighlight)(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightByIdAsync(string ticket, int id) {
            this.GetHighlightByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetHighlightByIdAsync(string ticket, int id, object userState) {
            if ((this.GetHighlightByIdOperationCompleted == null)) {
                this.GetHighlightByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightByIdOperationCompleted);
            }
            this.InvokeAsync("GetHighlightById", new object[] {
                        ticket,
                        id}, this.GetHighlightByIdOperationCompleted, userState);
        }
        
        private void OnGetHighlightByIdOperationCompleted(object arg) {
            if ((this.GetHighlightByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightByIdCompleted(this, new GetHighlightByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateHighlight", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateHighlight(string ticket, TransitHighlight t_highlight) {
            object[] results = this.Invoke("CreateOrUpdateHighlight", new object[] {
                        ticket,
                        t_highlight});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateHighlightAsync(string ticket, TransitHighlight t_highlight) {
            this.CreateOrUpdateHighlightAsync(ticket, t_highlight, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateHighlightAsync(string ticket, TransitHighlight t_highlight, object userState) {
            if ((this.CreateOrUpdateHighlightOperationCompleted == null)) {
                this.CreateOrUpdateHighlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateHighlightOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateHighlight", new object[] {
                        ticket,
                        t_highlight}, this.CreateOrUpdateHighlightOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateHighlightOperationCompleted(object arg) {
            if ((this.CreateOrUpdateHighlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateHighlightCompleted(this, new CreateOrUpdateHighlightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlightsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetHighlightsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetHighlightsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetHighlightsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetHighlightsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetHighlightsCountOperationCompleted == null)) {
                this.GetHighlightsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightsCountOperationCompleted);
            }
            this.InvokeAsync("GetHighlightsCount", new object[] {
                        ticket,
                        options}, this.GetHighlightsCountOperationCompleted, userState);
        }
        
        private void OnGetHighlightsCountOperationCompleted(object arg) {
            if ((this.GetHighlightsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightsCountCompleted(this, new GetHighlightsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetHighlights", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitHighlight[] GetHighlights(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetHighlights", new object[] {
                        ticket,
                        options});
            return ((TransitHighlight[])(results[0]));
        }
        
        /// <remarks/>
        public void GetHighlightsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetHighlightsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetHighlightsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetHighlightsOperationCompleted == null)) {
                this.GetHighlightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHighlightsOperationCompleted);
            }
            this.InvokeAsync("GetHighlights", new object[] {
                        ticket,
                        options}, this.GetHighlightsOperationCompleted, userState);
        }
        
        private void OnGetHighlightsOperationCompleted(object arg) {
            if ((this.GetHighlightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHighlightsCompleted(this, new GetHighlightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteHighlight", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteHighlight(string ticket, int id) {
            this.Invoke("DeleteHighlight", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteHighlightAsync(string ticket, int id) {
            this.DeleteHighlightAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteHighlightAsync(string ticket, int id, object userState) {
            if ((this.DeleteHighlightOperationCompleted == null)) {
                this.DeleteHighlightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteHighlightOperationCompleted);
            }
            this.InvokeAsync("DeleteHighlight", new object[] {
                        ticket,
                        id}, this.DeleteHighlightOperationCompleted, userState);
        }
        
        private void OnDeleteHighlightOperationCompleted(object arg) {
            if ((this.DeleteHighlightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteHighlightCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPost GetPostById(string ticket, int id) {
            object[] results = this.Invoke("GetPostById", new object[] {
                        ticket,
                        id});
            return ((TransitPost)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostByIdAsync(string ticket, int id) {
            this.GetPostByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPostByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPostByIdOperationCompleted == null)) {
                this.GetPostByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostById", new object[] {
                        ticket,
                        id}, this.GetPostByIdOperationCompleted, userState);
        }
        
        private void OnGetPostByIdOperationCompleted(object arg) {
            if ((this.GetPostByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostByIdCompleted(this, new GetPostByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/HasAccessToPost", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool HasAccessToPost(string ticket, int id) {
            object[] results = this.Invoke("HasAccessToPost", new object[] {
                        ticket,
                        id});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void HasAccessToPostAsync(string ticket, int id) {
            this.HasAccessToPostAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void HasAccessToPostAsync(string ticket, int id, object userState) {
            if ((this.HasAccessToPostOperationCompleted == null)) {
                this.HasAccessToPostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHasAccessToPostOperationCompleted);
            }
            this.InvokeAsync("HasAccessToPost", new object[] {
                        ticket,
                        id}, this.HasAccessToPostOperationCompleted, userState);
        }
        
        private void OnHasAccessToPostOperationCompleted(object arg) {
            if ((this.HasAccessToPostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HasAccessToPostCompleted(this, new HasAccessToPostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdatePost", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePost(string ticket, TransitPost t_post) {
            object[] results = this.Invoke("CreateOrUpdatePost", new object[] {
                        ticket,
                        t_post});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostAsync(string ticket, TransitPost t_post) {
            this.CreateOrUpdatePostAsync(ticket, t_post, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostAsync(string ticket, TransitPost t_post, object userState) {
            if ((this.CreateOrUpdatePostOperationCompleted == null)) {
                this.CreateOrUpdatePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePostOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePost", new object[] {
                        ticket,
                        t_post}, this.CreateOrUpdatePostOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePostOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePostCompleted(this, new CreateOrUpdatePostCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostsCount(string ticket, TransitPostQueryOptions options) {
            object[] results = this.Invoke("GetPostsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostsCountAsync(string ticket, TransitPostQueryOptions options) {
            this.GetPostsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostsCountAsync(string ticket, TransitPostQueryOptions options, object userState) {
            if ((this.GetPostsCountOperationCompleted == null)) {
                this.GetPostsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostsCountOperationCompleted);
            }
            this.InvokeAsync("GetPostsCount", new object[] {
                        ticket,
                        options}, this.GetPostsCountOperationCompleted, userState);
        }
        
        private void OnGetPostsCountOperationCompleted(object arg) {
            if ((this.GetPostsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostsCountCompleted(this, new GetPostsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPosts", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPost[] GetPosts(string ticket, TransitPostQueryOptions options) {
            object[] results = this.Invoke("GetPosts", new object[] {
                        ticket,
                        options});
            return ((TransitPost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostsAsync(string ticket, TransitPostQueryOptions options) {
            this.GetPostsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostsAsync(string ticket, TransitPostQueryOptions options, object userState) {
            if ((this.GetPostsOperationCompleted == null)) {
                this.GetPostsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostsOperationCompleted);
            }
            this.InvokeAsync("GetPosts", new object[] {
                        ticket,
                        options}, this.GetPostsOperationCompleted, userState);
        }
        
        private void OnGetPostsOperationCompleted(object arg) {
            if ((this.GetPostsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostsCompleted(this, new GetPostsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostsCountEx", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostsCountEx(string ticket, TransitPostQueryOptions options) {
            object[] results = this.Invoke("GetPostsCountEx", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostsCountExAsync(string ticket, TransitPostQueryOptions options) {
            this.GetPostsCountExAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostsCountExAsync(string ticket, TransitPostQueryOptions options, object userState) {
            if ((this.GetPostsCountExOperationCompleted == null)) {
                this.GetPostsCountExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostsCountExOperationCompleted);
            }
            this.InvokeAsync("GetPostsCountEx", new object[] {
                        ticket,
                        options}, this.GetPostsCountExOperationCompleted, userState);
        }
        
        private void OnGetPostsCountExOperationCompleted(object arg) {
            if ((this.GetPostsCountExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostsCountExCompleted(this, new GetPostsCountExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostsEx", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPost[] GetPostsEx(string ticket, TransitPostQueryOptions options) {
            object[] results = this.Invoke("GetPostsEx", new object[] {
                        ticket,
                        options});
            return ((TransitPost[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostsExAsync(string ticket, TransitPostQueryOptions options) {
            this.GetPostsExAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostsExAsync(string ticket, TransitPostQueryOptions options, object userState) {
            if ((this.GetPostsExOperationCompleted == null)) {
                this.GetPostsExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostsExOperationCompleted);
            }
            this.InvokeAsync("GetPostsEx", new object[] {
                        ticket,
                        options}, this.GetPostsExOperationCompleted, userState);
        }
        
        private void OnGetPostsExOperationCompleted(object arg) {
            if ((this.GetPostsExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostsExCompleted(this, new GetPostsExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeletePost", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePost(string ticket, int id) {
            this.Invoke("DeletePost", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePostAsync(string ticket, int id) {
            this.DeletePostAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePostAsync(string ticket, int id, object userState) {
            if ((this.DeletePostOperationCompleted == null)) {
                this.DeletePostOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostOperationCompleted);
            }
            this.InvokeAsync("DeletePost", new object[] {
                        ticket,
                        id}, this.DeletePostOperationCompleted, userState);
        }
        
        private void OnDeletePostOperationCompleted(object arg) {
            if ((this.DeletePostCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementPostCounter", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IncrementPostCounter(string ticket, int id) {
            object[] results = this.Invoke("IncrementPostCounter", new object[] {
                        ticket,
                        id});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementPostCounterAsync(string ticket, int id) {
            this.IncrementPostCounterAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void IncrementPostCounterAsync(string ticket, int id, object userState) {
            if ((this.IncrementPostCounterOperationCompleted == null)) {
                this.IncrementPostCounterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementPostCounterOperationCompleted);
            }
            this.InvokeAsync("IncrementPostCounter", new object[] {
                        ticket,
                        id}, this.IncrementPostCounterOperationCompleted, userState);
        }
        
        private void OnIncrementPostCounterOperationCompleted(object arg) {
            if ((this.IncrementPostCounterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementPostCounterCompleted(this, new IncrementPostCounterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/IncrementPostCounters", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long IncrementPostCounters(string ticket, int[] ids) {
            object[] results = this.Invoke("IncrementPostCounters", new object[] {
                        ticket,
                        ids});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void IncrementPostCountersAsync(string ticket, int[] ids) {
            this.IncrementPostCountersAsync(ticket, ids, null);
        }
        
        /// <remarks/>
        public void IncrementPostCountersAsync(string ticket, int[] ids, object userState) {
            if ((this.IncrementPostCountersOperationCompleted == null)) {
                this.IncrementPostCountersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIncrementPostCountersOperationCompleted);
            }
            this.InvokeAsync("IncrementPostCounters", new object[] {
                        ticket,
                        ids}, this.IncrementPostCountersOperationCompleted, userState);
        }
        
        private void OnIncrementPostCountersOperationCompleted(object arg) {
            if ((this.IncrementPostCountersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IncrementPostCountersCompleted(this, new IncrementPostCountersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateStats", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateStats(string ticket, TransitBrowser[] t_browsers, TransitReferrerHost[] t_rhs, TransitReferrerSearchQuery[] t_rsqs) {
            object[] results = this.Invoke("CreateOrUpdateStats", new object[] {
                        ticket,
                        t_browsers,
                        t_rhs,
                        t_rsqs});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateStatsAsync(string ticket, TransitBrowser[] t_browsers, TransitReferrerHost[] t_rhs, TransitReferrerSearchQuery[] t_rsqs) {
            this.CreateOrUpdateStatsAsync(ticket, t_browsers, t_rhs, t_rsqs, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateStatsAsync(string ticket, TransitBrowser[] t_browsers, TransitReferrerHost[] t_rhs, TransitReferrerSearchQuery[] t_rsqs, object userState) {
            if ((this.CreateOrUpdateStatsOperationCompleted == null)) {
                this.CreateOrUpdateStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateStatsOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateStats", new object[] {
                        ticket,
                        t_browsers,
                        t_rhs,
                        t_rsqs}, this.CreateOrUpdateStatsOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateStatsOperationCompleted(object arg) {
            if ((this.CreateOrUpdateStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateStatsCompleted(this, new CreateOrUpdateStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetStats", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitStats GetStats(string ticket, int reserved) {
            object[] results = this.Invoke("GetStats", new object[] {
                        ticket,
                        reserved});
            return ((TransitStats)(results[0]));
        }
        
        /// <remarks/>
        public void GetStatsAsync(string ticket, int reserved) {
            this.GetStatsAsync(ticket, reserved, null);
        }
        
        /// <remarks/>
        public void GetStatsAsync(string ticket, int reserved, object userState) {
            if ((this.GetStatsOperationCompleted == null)) {
                this.GetStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatsOperationCompleted);
            }
            this.InvokeAsync("GetStats", new object[] {
                        ticket,
                        reserved}, this.GetStatsOperationCompleted, userState);
        }
        
        private void OnGetStatsOperationCompleted(object arg) {
            if ((this.GetStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatsCompleted(this, new GetStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetStatsSummary", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitCounter[] GetStatsSummary(string ticket, TransitStatsQueryOptions options) {
            object[] results = this.Invoke("GetStatsSummary", new object[] {
                        ticket,
                        options});
            return ((TransitCounter[])(results[0]));
        }
        
        /// <remarks/>
        public void GetStatsSummaryAsync(string ticket, TransitStatsQueryOptions options) {
            this.GetStatsSummaryAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetStatsSummaryAsync(string ticket, TransitStatsQueryOptions options, object userState) {
            if ((this.GetStatsSummaryOperationCompleted == null)) {
                this.GetStatsSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStatsSummaryOperationCompleted);
            }
            this.InvokeAsync("GetStatsSummary", new object[] {
                        ticket,
                        options}, this.GetStatsSummaryOperationCompleted, userState);
        }
        
        private void OnGetStatsSummaryOperationCompleted(object arg) {
            if ((this.GetStatsSummaryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStatsSummaryCompleted(this, new GetStatsSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdatePostImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePostImage(string ticket, int post_id, TransitImage t_image) {
            object[] results = this.Invoke("CreateOrUpdatePostImage", new object[] {
                        ticket,
                        post_id,
                        t_image});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostImageAsync(string ticket, int post_id, TransitImage t_image) {
            this.CreateOrUpdatePostImageAsync(ticket, post_id, t_image, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostImageAsync(string ticket, int post_id, TransitImage t_image, object userState) {
            if ((this.CreateOrUpdatePostImageOperationCompleted == null)) {
                this.CreateOrUpdatePostImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePostImageOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePostImage", new object[] {
                        ticket,
                        post_id,
                        t_image}, this.CreateOrUpdatePostImageOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePostImageOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePostImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePostImageCompleted(this, new CreateOrUpdatePostImageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostImageById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostImage GetPostImageById(string ticket, int id) {
            object[] results = this.Invoke("GetPostImageById", new object[] {
                        ticket,
                        id});
            return ((TransitPostImage)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostImageByIdAsync(string ticket, int id) {
            this.GetPostImageByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPostImageByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPostImageByIdOperationCompleted == null)) {
                this.GetPostImageByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostImageByIdOperationCompleted);
            }
            this.InvokeAsync("GetPostImageById", new object[] {
                        ticket,
                        id}, this.GetPostImageByIdOperationCompleted, userState);
        }
        
        private void OnGetPostImageByIdOperationCompleted(object arg) {
            if ((this.GetPostImageByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostImageByIdCompleted(this, new GetPostImageByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeletePostImage", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePostImage(string ticket, int id) {
            this.Invoke("DeletePostImage", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePostImageAsync(string ticket, int id) {
            this.DeletePostImageAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePostImageAsync(string ticket, int id, object userState) {
            if ((this.DeletePostImageOperationCompleted == null)) {
                this.DeletePostImageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePostImageOperationCompleted);
            }
            this.InvokeAsync("DeletePostImage", new object[] {
                        ticket,
                        id}, this.DeletePostImageOperationCompleted, userState);
        }
        
        private void OnDeletePostImageOperationCompleted(object arg) {
            if ((this.DeletePostImageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePostImageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostImagesCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostImagesCount(string ticket, TransitPostImageQueryOptions options) {
            object[] results = this.Invoke("GetPostImagesCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostImagesCountAsync(string ticket, TransitPostImageQueryOptions options) {
            this.GetPostImagesCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostImagesCountAsync(string ticket, TransitPostImageQueryOptions options, object userState) {
            if ((this.GetPostImagesCountOperationCompleted == null)) {
                this.GetPostImagesCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostImagesCountOperationCompleted);
            }
            this.InvokeAsync("GetPostImagesCount", new object[] {
                        ticket,
                        options}, this.GetPostImagesCountOperationCompleted, userState);
        }
        
        private void OnGetPostImagesCountOperationCompleted(object arg) {
            if ((this.GetPostImagesCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostImagesCountCompleted(this, new GetPostImagesCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostImages", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostImage[] GetPostImages(string ticket, TransitPostImageQueryOptions options) {
            object[] results = this.Invoke("GetPostImages", new object[] {
                        ticket,
                        options});
            return ((TransitPostImage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostImagesAsync(string ticket, TransitPostImageQueryOptions options) {
            this.GetPostImagesAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostImagesAsync(string ticket, TransitPostImageQueryOptions options, object userState) {
            if ((this.GetPostImagesOperationCompleted == null)) {
                this.GetPostImagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostImagesOperationCompleted);
            }
            this.InvokeAsync("GetPostImages", new object[] {
                        ticket,
                        options}, this.GetPostImagesOperationCompleted, userState);
        }
        
        private void OnGetPostImagesOperationCompleted(object arg) {
            if ((this.GetPostImagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostImagesCompleted(this, new GetPostImagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostImagesCountEx", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPostImagesCountEx(string ticket, TransitPostImageQueryOptions options) {
            object[] results = this.Invoke("GetPostImagesCountEx", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPostImagesCountExAsync(string ticket, TransitPostImageQueryOptions options) {
            this.GetPostImagesCountExAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostImagesCountExAsync(string ticket, TransitPostImageQueryOptions options, object userState) {
            if ((this.GetPostImagesCountExOperationCompleted == null)) {
                this.GetPostImagesCountExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostImagesCountExOperationCompleted);
            }
            this.InvokeAsync("GetPostImagesCountEx", new object[] {
                        ticket,
                        options}, this.GetPostImagesCountExOperationCompleted, userState);
        }
        
        private void OnGetPostImagesCountExOperationCompleted(object arg) {
            if ((this.GetPostImagesCountExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostImagesCountExCompleted(this, new GetPostImagesCountExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPostImagesEx", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPostImage[] GetPostImagesEx(string ticket, TransitPostImageQueryOptions options) {
            object[] results = this.Invoke("GetPostImagesEx", new object[] {
                        ticket,
                        options});
            return ((TransitPostImage[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPostImagesExAsync(string ticket, TransitPostImageQueryOptions options) {
            this.GetPostImagesExAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPostImagesExAsync(string ticket, TransitPostImageQueryOptions options, object userState) {
            if ((this.GetPostImagesExOperationCompleted == null)) {
                this.GetPostImagesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPostImagesExOperationCompleted);
            }
            this.InvokeAsync("GetPostImagesEx", new object[] {
                        ticket,
                        options}, this.GetPostImagesExOperationCompleted, userState);
        }
        
        private void OnGetPostImagesExOperationCompleted(object arg) {
            if ((this.GetPostImagesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPostImagesExCompleted(this, new GetPostImagesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPermalinkById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPermalink GetPermalinkById(string ticket, int id) {
            object[] results = this.Invoke("GetPermalinkById", new object[] {
                        ticket,
                        id});
            return ((TransitPermalink)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermalinkByIdAsync(string ticket, int id) {
            this.GetPermalinkByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetPermalinkByIdAsync(string ticket, int id, object userState) {
            if ((this.GetPermalinkByIdOperationCompleted == null)) {
                this.GetPermalinkByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermalinkByIdOperationCompleted);
            }
            this.InvokeAsync("GetPermalinkById", new object[] {
                        ticket,
                        id}, this.GetPermalinkByIdOperationCompleted, userState);
        }
        
        private void OnGetPermalinkByIdOperationCompleted(object arg) {
            if ((this.GetPermalinkByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermalinkByIdCompleted(this, new GetPermalinkByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPermalinkBySource", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPermalink GetPermalinkBySource(string ticket, TransitPermalinkQueryOptions options) {
            object[] results = this.Invoke("GetPermalinkBySource", new object[] {
                        ticket,
                        options});
            return ((TransitPermalink)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermalinkBySourceAsync(string ticket, TransitPermalinkQueryOptions options) {
            this.GetPermalinkBySourceAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPermalinkBySourceAsync(string ticket, TransitPermalinkQueryOptions options, object userState) {
            if ((this.GetPermalinkBySourceOperationCompleted == null)) {
                this.GetPermalinkBySourceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermalinkBySourceOperationCompleted);
            }
            this.InvokeAsync("GetPermalinkBySource", new object[] {
                        ticket,
                        options}, this.GetPermalinkBySourceOperationCompleted, userState);
        }
        
        private void OnGetPermalinkBySourceOperationCompleted(object arg) {
            if ((this.GetPermalinkBySourceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermalinkBySourceCompleted(this, new GetPermalinkBySourceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdatePermalink", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePermalink(string ticket, TransitPermalink t_permalink) {
            object[] results = this.Invoke("CreateOrUpdatePermalink", new object[] {
                        ticket,
                        t_permalink});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePermalinkAsync(string ticket, TransitPermalink t_permalink) {
            this.CreateOrUpdatePermalinkAsync(ticket, t_permalink, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePermalinkAsync(string ticket, TransitPermalink t_permalink, object userState) {
            if ((this.CreateOrUpdatePermalinkOperationCompleted == null)) {
                this.CreateOrUpdatePermalinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePermalinkOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePermalink", new object[] {
                        ticket,
                        t_permalink}, this.CreateOrUpdatePermalinkOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePermalinkOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePermalinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePermalinkCompleted(this, new CreateOrUpdatePermalinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPermalinksCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetPermalinksCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetPermalinksCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetPermalinksCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetPermalinksCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPermalinksCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetPermalinksCountOperationCompleted == null)) {
                this.GetPermalinksCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermalinksCountOperationCompleted);
            }
            this.InvokeAsync("GetPermalinksCount", new object[] {
                        ticket,
                        options}, this.GetPermalinksCountOperationCompleted, userState);
        }
        
        private void OnGetPermalinksCountOperationCompleted(object arg) {
            if ((this.GetPermalinksCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermalinksCountCompleted(this, new GetPermalinksCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetPermalinks", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitPermalink[] GetPermalinks(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetPermalinks", new object[] {
                        ticket,
                        options});
            return ((TransitPermalink[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPermalinksAsync(string ticket, WebServiceQueryOptions options) {
            this.GetPermalinksAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetPermalinksAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetPermalinksOperationCompleted == null)) {
                this.GetPermalinksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPermalinksOperationCompleted);
            }
            this.InvokeAsync("GetPermalinks", new object[] {
                        ticket,
                        options}, this.GetPermalinksOperationCompleted, userState);
        }
        
        private void OnGetPermalinksOperationCompleted(object arg) {
            if ((this.GetPermalinksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPermalinksCompleted(this, new GetPermalinksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeletePermalink", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePermalink(string ticket, int id) {
            this.Invoke("DeletePermalink", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeletePermalinkAsync(string ticket, int id) {
            this.DeletePermalinkAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeletePermalinkAsync(string ticket, int id, object userState) {
            if ((this.DeletePermalinkOperationCompleted == null)) {
                this.DeletePermalinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePermalinkOperationCompleted);
            }
            this.InvokeAsync("DeletePermalink", new object[] {
                        ticket,
                        id}, this.DeletePermalinkOperationCompleted, userState);
        }
        
        private void OnDeletePermalinkOperationCompleted(object arg) {
            if ((this.DeletePermalinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePermalinkCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetCommentById", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitComment GetCommentById(string ticket, int id) {
            object[] results = this.Invoke("GetCommentById", new object[] {
                        ticket,
                        id});
            return ((TransitComment)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentByIdAsync(string ticket, int id) {
            this.GetCommentByIdAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void GetCommentByIdAsync(string ticket, int id, object userState) {
            if ((this.GetCommentByIdOperationCompleted == null)) {
                this.GetCommentByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentByIdOperationCompleted);
            }
            this.InvokeAsync("GetCommentById", new object[] {
                        ticket,
                        id}, this.GetCommentByIdOperationCompleted, userState);
        }
        
        private void OnGetCommentByIdOperationCompleted(object arg) {
            if ((this.GetCommentByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentByIdCompleted(this, new GetCommentByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdateComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdateComment(string ticket, TransitComment t_comment) {
            object[] results = this.Invoke("CreateOrUpdateComment", new object[] {
                        ticket,
                        t_comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdateCommentAsync(string ticket, TransitComment t_comment) {
            this.CreateOrUpdateCommentAsync(ticket, t_comment, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdateCommentAsync(string ticket, TransitComment t_comment, object userState) {
            if ((this.CreateOrUpdateCommentOperationCompleted == null)) {
                this.CreateOrUpdateCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdateCommentOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdateComment", new object[] {
                        ticket,
                        t_comment}, this.CreateOrUpdateCommentOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdateCommentOperationCompleted(object arg) {
            if ((this.CreateOrUpdateCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdateCommentCompleted(this, new CreateOrUpdateCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetCommentsCount", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetCommentsCount(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetCommentsCount", new object[] {
                        ticket,
                        options});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsCountAsync(string ticket, WebServiceQueryOptions options) {
            this.GetCommentsCountAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetCommentsCountAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetCommentsCountOperationCompleted == null)) {
                this.GetCommentsCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsCountOperationCompleted);
            }
            this.InvokeAsync("GetCommentsCount", new object[] {
                        ticket,
                        options}, this.GetCommentsCountOperationCompleted, userState);
        }
        
        private void OnGetCommentsCountOperationCompleted(object arg) {
            if ((this.GetCommentsCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCountCompleted(this, new GetCommentsCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetComments", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TransitComment[] GetComments(string ticket, WebServiceQueryOptions options) {
            object[] results = this.Invoke("GetComments", new object[] {
                        ticket,
                        options});
            return ((TransitComment[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string ticket, WebServiceQueryOptions options) {
            this.GetCommentsAsync(ticket, options, null);
        }
        
        /// <remarks/>
        public void GetCommentsAsync(string ticket, WebServiceQueryOptions options, object userState) {
            if ((this.GetCommentsOperationCompleted == null)) {
                this.GetCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommentsOperationCompleted);
            }
            this.InvokeAsync("GetComments", new object[] {
                        ticket,
                        options}, this.GetCommentsOperationCompleted, userState);
        }
        
        private void OnGetCommentsOperationCompleted(object arg) {
            if ((this.GetCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommentsCompleted(this, new GetCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/DeleteComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteComment(string ticket, int id) {
            this.Invoke("DeleteComment", new object[] {
                        ticket,
                        id});
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(string ticket, int id) {
            this.DeleteCommentAsync(ticket, id, null);
        }
        
        /// <remarks/>
        public void DeleteCommentAsync(string ticket, int id, object userState) {
            if ((this.DeleteCommentOperationCompleted == null)) {
                this.DeleteCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCommentOperationCompleted);
            }
            this.InvokeAsync("DeleteComment", new object[] {
                        ticket,
                        id}, this.DeleteCommentOperationCompleted, userState);
        }
        
        private void OnDeleteCommentOperationCompleted(object arg) {
            if ((this.DeleteCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/CreateOrUpdatePostComment", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrUpdatePostComment(string ticket, int post_id, TransitComment t_comment) {
            object[] results = this.Invoke("CreateOrUpdatePostComment", new object[] {
                        ticket,
                        post_id,
                        t_comment});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostCommentAsync(string ticket, int post_id, TransitComment t_comment) {
            this.CreateOrUpdatePostCommentAsync(ticket, post_id, t_comment, null);
        }
        
        /// <remarks/>
        public void CreateOrUpdatePostCommentAsync(string ticket, int post_id, TransitComment t_comment, object userState) {
            if ((this.CreateOrUpdatePostCommentOperationCompleted == null)) {
                this.CreateOrUpdatePostCommentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrUpdatePostCommentOperationCompleted);
            }
            this.InvokeAsync("CreateOrUpdatePostComment", new object[] {
                        ticket,
                        post_id,
                        t_comment}, this.CreateOrUpdatePostCommentOperationCompleted, userState);
        }
        
        private void OnCreateOrUpdatePostCommentOperationCompleted(object arg) {
            if ((this.CreateOrUpdatePostCommentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrUpdatePostCommentCompleted(this, new CreateOrUpdatePostCommentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetVersion", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetVersion() {
            object[] results = this.Invoke("GetVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetVersionAsync(object userState) {
            if ((this.GetVersionOperationCompleted == null)) {
                this.GetVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetVersionOperationCompleted);
            }
            this.InvokeAsync("GetVersion", new object[0], this.GetVersionOperationCompleted, userState);
        }
        
        private void OnGetVersionOperationCompleted(object arg) {
            if ((this.GetVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetTitle", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTitle() {
            object[] results = this.Invoke("GetTitle", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTitleAsync() {
            this.GetTitleAsync(null);
        }
        
        /// <remarks/>
        public void GetTitleAsync(object userState) {
            if ((this.GetTitleOperationCompleted == null)) {
                this.GetTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTitleOperationCompleted);
            }
            this.InvokeAsync("GetTitle", new object[0], this.GetTitleOperationCompleted, userState);
        }
        
        private void OnGetTitleOperationCompleted(object arg) {
            if ((this.GetTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTitleCompleted(this, new GetTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetCopyright", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCopyright() {
            object[] results = this.Invoke("GetCopyright", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCopyrightAsync() {
            this.GetCopyrightAsync(null);
        }
        
        /// <remarks/>
        public void GetCopyrightAsync(object userState) {
            if ((this.GetCopyrightOperationCompleted == null)) {
                this.GetCopyrightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCopyrightOperationCompleted);
            }
            this.InvokeAsync("GetCopyright", new object[0], this.GetCopyrightOperationCompleted, userState);
        }
        
        private void OnGetCopyrightOperationCompleted(object arg) {
            if ((this.GetCopyrightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCopyrightCompleted(this, new GetCopyrightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetDescription", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDescription() {
            object[] results = this.Invoke("GetDescription", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDescriptionAsync() {
            this.GetDescriptionAsync(null);
        }
        
        /// <remarks/>
        public void GetDescriptionAsync(object userState) {
            if ((this.GetDescriptionOperationCompleted == null)) {
                this.GetDescriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDescriptionOperationCompleted);
            }
            this.InvokeAsync("GetDescription", new object[0], this.GetDescriptionOperationCompleted, userState);
        }
        
        private void OnGetDescriptionOperationCompleted(object arg) {
            if ((this.GetDescriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDescriptionCompleted(this, new GetDescriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://dblock.org/ns/GetUptime", RequestNamespace="http://dblock.org/ns/", ResponseNamespace="http://dblock.org/ns/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long GetUptime() {
            object[] results = this.Invoke("GetUptime", new object[0]);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void GetUptimeAsync() {
            this.GetUptimeAsync(null);
        }
        
        /// <remarks/>
        public void GetUptimeAsync(object userState) {
            if ((this.GetUptimeOperationCompleted == null)) {
                this.GetUptimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUptimeOperationCompleted);
            }
            this.InvokeAsync("GetUptime", new object[0], this.GetUptimeOperationCompleted, userState);
        }
        
        private void OnGetUptimeOperationCompleted(object arg) {
            if ((this.GetUptimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUptimeCompleted(this, new GetUptimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostComment : TransitAssociatedComment {
        
        private int postIdField;
        
        /// <remarks/>
        public int PostId {
            get {
                return this.postIdField;
            }
            set {
                this.postIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageComment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostComment))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitAssociatedComment : TransitObject {
        
        private int commentIdField;
        
        private int associatedIdField;
        
        private string commentTextField;
        
        private string commentIpAddressField;
        
        private string commentLoginNameField;
        
        private string commentLoginWebsiteField;
        
        private System.DateTime commentCreatedField;
        
        private System.DateTime commentModifiedField;
        
        private int commentLevelField;
        
        private string associatedTypeField;
        
        /// <remarks/>
        public int CommentId {
            get {
                return this.commentIdField;
            }
            set {
                this.commentIdField = value;
            }
        }
        
        /// <remarks/>
        public int AssociatedId {
            get {
                return this.associatedIdField;
            }
            set {
                this.associatedIdField = value;
            }
        }
        
        /// <remarks/>
        public string CommentText {
            get {
                return this.commentTextField;
            }
            set {
                this.commentTextField = value;
            }
        }
        
        /// <remarks/>
        public string CommentIpAddress {
            get {
                return this.commentIpAddressField;
            }
            set {
                this.commentIpAddressField = value;
            }
        }
        
        /// <remarks/>
        public string CommentLoginName {
            get {
                return this.commentLoginNameField;
            }
            set {
                this.commentLoginNameField = value;
            }
        }
        
        /// <remarks/>
        public string CommentLoginWebsite {
            get {
                return this.commentLoginWebsiteField;
            }
            set {
                this.commentLoginWebsiteField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CommentCreated {
            get {
                return this.commentCreatedField;
            }
            set {
                this.commentCreatedField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime CommentModified {
            get {
                return this.commentModifiedField;
            }
            set {
                this.commentModifiedField = value;
            }
        }
        
        /// <remarks/>
        public int CommentLevel {
            get {
                return this.commentLevelField;
            }
            set {
                this.commentLevelField = value;
            }
        }
        
        /// <remarks/>
        public string AssociatedType {
            get {
                return this.associatedTypeField;
            }
            set {
                this.associatedTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPermalink))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostImage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitStats))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitHighlight))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferrerSearchQuery))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferrerHostRollup))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReference))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImage))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferrerHost))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitBrowser))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitTopic))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPost))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostLogin))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitLogin))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitFeedItem))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitFeed))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitCounter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitComment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAssociatedComment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageComment))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostComment))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitObject {
        
        private int idField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class EXIFPropertyItem {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class EXIFMetaData {
        
        private EXIFPropertyItem[] eXIFPropertyItemsField;
        
        /// <remarks/>
        public EXIFPropertyItem[] EXIFPropertyItems {
            get {
                return this.eXIFPropertyItemsField;
            }
            set {
                this.eXIFPropertyItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPermalinkQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostImageQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitStatsQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferenceQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitReferrerHostQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostLoginQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitFeedItemQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitFeedQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitAssociatedCommentQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageCommentQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostCommentQueryOptions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class WebServiceQueryOptions {
        
        private string sortExpressionField;
        
        private WebServiceQuerySortDirection sortDirectionField;
        
        private int pageSizeField;
        
        private int pageNumberField;
        
        /// <remarks/>
        public string SortExpression {
            get {
                return this.sortExpressionField;
            }
            set {
                this.sortExpressionField = value;
            }
        }
        
        /// <remarks/>
        public WebServiceQuerySortDirection SortDirection {
            get {
                return this.sortDirectionField;
            }
            set {
                this.sortDirectionField = value;
            }
        }
        
        /// <remarks/>
        public int PageSize {
            get {
                return this.pageSizeField;
            }
            set {
                this.pageSizeField = value;
            }
        }
        
        /// <remarks/>
        public int PageNumber {
            get {
                return this.pageNumberField;
            }
            set {
                this.pageNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum WebServiceQuerySortDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPermalinkQueryOptions : WebServiceQueryOptions {
        
        private int sourceIdField;
        
        private string sourceTypeField;
        
        /// <remarks/>
        public int SourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        public string SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostImageQueryOptions : WebServiceQueryOptions {
        
        private bool countersField;
        
        private bool preferredOnlyField;
        
        private int postIdField;
        
        /// <remarks/>
        public bool Counters {
            get {
                return this.countersField;
            }
            set {
                this.countersField = value;
            }
        }
        
        /// <remarks/>
        public bool PreferredOnly {
            get {
                return this.preferredOnlyField;
            }
            set {
                this.preferredOnlyField = value;
            }
        }
        
        /// <remarks/>
        public int PostId {
            get {
                return this.postIdField;
            }
            set {
                this.postIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitStatsQueryOptions : WebServiceQueryOptions {
        
        private Type typeField;
        
        /// <remarks/>
        public Type Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum Type {
        
        /// <remarks/>
        Hourly,
        
        /// <remarks/>
        Daily,
        
        /// <remarks/>
        Weekly,
        
        /// <remarks/>
        Monthly,
        
        /// <remarks/>
        Yearly,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostQueryOptions : WebServiceQueryOptions {
        
        private int topicIdField;
        
        private string queryField;
        
        private System.DateTime dateStartField;
        
        private System.DateTime dateEndField;
        
        private bool publishedOnlyField;
        
        private bool displayedOnlyField;
        
        /// <remarks/>
        public int TopicId {
            get {
                return this.topicIdField;
            }
            set {
                this.topicIdField = value;
            }
        }
        
        /// <remarks/>
        public string Query {
            get {
                return this.queryField;
            }
            set {
                this.queryField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateStart {
            get {
                return this.dateStartField;
            }
            set {
                this.dateStartField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DateEnd {
            get {
                return this.dateEndField;
            }
            set {
                this.dateEndField = value;
            }
        }
        
        /// <remarks/>
        public bool PublishedOnly {
            get {
                return this.publishedOnlyField;
            }
            set {
                this.publishedOnlyField = value;
            }
        }
        
        /// <remarks/>
        public bool DisplayedOnly {
            get {
                return this.displayedOnlyField;
            }
            set {
                this.displayedOnlyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferenceQueryOptions : WebServiceQueryOptions {
        
        private string searchQueryField;
        
        /// <remarks/>
        public string SearchQuery {
            get {
                return this.searchQueryField;
            }
            set {
                this.searchQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImageQueryOptions : WebServiceQueryOptions {
        
        private bool excludeBlogImagesField;
        
        /// <remarks/>
        public bool ExcludeBlogImages {
            get {
                return this.excludeBlogImagesField;
            }
            set {
                this.excludeBlogImagesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferrerHostQueryOptions : WebServiceQueryOptions {
        
        private System.DateTime dateStartField;
        
        /// <remarks/>
        public System.DateTime DateStart {
            get {
                return this.dateStartField;
            }
            set {
                this.dateStartField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostLoginQueryOptions : WebServiceQueryOptions {
        
        private int postIdField;
        
        /// <remarks/>
        public int PostId {
            get {
                return this.postIdField;
            }
            set {
                this.postIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitFeedItemQueryOptions : WebServiceQueryOptions {
        
        private int feedIdField;
        
        /// <remarks/>
        public int FeedId {
            get {
                return this.feedIdField;
            }
            set {
                this.feedIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitFeedQueryOptions : WebServiceQueryOptions {
        
        private TransitFeedType typeField;
        
        /// <remarks/>
        public TransitFeedType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum TransitFeedType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Rss,
        
        /// <remarks/>
        Atom,
        
        /// <remarks/>
        AtomPost,
        
        /// <remarks/>
        ZenFlashGallery,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitImageCommentQueryOptions))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TransitPostCommentQueryOptions))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitAssociatedCommentQueryOptions : WebServiceQueryOptions {
        
        private int associatedIdField;
        
        /// <remarks/>
        public int AssociatedId {
            get {
                return this.associatedIdField;
            }
            set {
                this.associatedIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImageCommentQueryOptions : TransitAssociatedCommentQueryOptions {
        
        private int imageIdField;
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostCommentQueryOptions : TransitAssociatedCommentQueryOptions {
        
        private int postIdField;
        
        /// <remarks/>
        public int PostId {
            get {
                return this.postIdField;
            }
            set {
                this.postIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPermalink : TransitObject {
        
        private string sourceTypeField;
        
        private string targetTypeField;
        
        private int sourceIdField;
        
        private int targetIdField;
        
        /// <remarks/>
        public string SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public string TargetType {
            get {
                return this.targetTypeField;
            }
            set {
                this.targetTypeField = value;
            }
        }
        
        /// <remarks/>
        public int SourceId {
            get {
                return this.sourceIdField;
            }
            set {
                this.sourceIdField = value;
            }
        }
        
        /// <remarks/>
        public int TargetId {
            get {
                return this.targetIdField;
            }
            set {
                this.targetIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostImage : TransitObject {
        
        private int indexField;
        
        private TransitImage imageField;
        
        private TransitPost postField;
        
        /// <remarks/>
        public int Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public TransitImage Image {
            get {
                return this.imageField;
            }
            set {
                this.imageField = value;
            }
        }
        
        /// <remarks/>
        public TransitPost Post {
            get {
                return this.postField;
            }
            set {
                this.postField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImage : TransitObject {
        
        private string nameField;
        
        private string pathField;
        
        private string descriptionField;
        
        private bool preferredField;
        
        private byte[] dataField;
        
        private byte[] thumbnailField;
        
        private System.DateTime modifiedField;
        
        private int commentsCountField;
        
        private TransitCounter counterField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Path {
            get {
                return this.pathField;
            }
            set {
                this.pathField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public bool Preferred {
            get {
                return this.preferredField;
            }
            set {
                this.preferredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Data {
            get {
                return this.dataField;
            }
            set {
                this.dataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Thumbnail {
            get {
                return this.thumbnailField;
            }
            set {
                this.thumbnailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int CommentsCount {
            get {
                return this.commentsCountField;
            }
            set {
                this.commentsCountField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitCounter : TransitObject {
        
        private long countField;
        
        private System.DateTime createdField;
        
        /// <remarks/>
        public long Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPost : TransitObject {
        
        private TransitTopic[] topicsField;
        
        private bool hasAccessField;
        
        private TransitCounter counterField;
        
        private int imageIdField;
        
        private int imagesCountField;
        
        private string titleField;
        
        private string bodyXHTMLField;
        
        private string bodyField;
        
        private int loginIdField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int commentsCountField;
        
        private bool publishField;
        
        private bool displayField;
        
        private bool stickyField;
        
        private bool exportField;
        
        /// <remarks/>
        public TransitTopic[] Topics {
            get {
                return this.topicsField;
            }
            set {
                this.topicsField = value;
            }
        }
        
        /// <remarks/>
        public bool HasAccess {
            get {
                return this.hasAccessField;
            }
            set {
                this.hasAccessField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter Counter {
            get {
                return this.counterField;
            }
            set {
                this.counterField = value;
            }
        }
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
        
        /// <remarks/>
        public int ImagesCount {
            get {
                return this.imagesCountField;
            }
            set {
                this.imagesCountField = value;
            }
        }
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string BodyXHTML {
            get {
                return this.bodyXHTMLField;
            }
            set {
                this.bodyXHTMLField = value;
            }
        }
        
        /// <remarks/>
        public string Body {
            get {
                return this.bodyField;
            }
            set {
                this.bodyField = value;
            }
        }
        
        /// <remarks/>
        public int LoginId {
            get {
                return this.loginIdField;
            }
            set {
                this.loginIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int CommentsCount {
            get {
                return this.commentsCountField;
            }
            set {
                this.commentsCountField = value;
            }
        }
        
        /// <remarks/>
        public bool Publish {
            get {
                return this.publishField;
            }
            set {
                this.publishField = value;
            }
        }
        
        /// <remarks/>
        public bool Display {
            get {
                return this.displayField;
            }
            set {
                this.displayField = value;
            }
        }
        
        /// <remarks/>
        public bool Sticky {
            get {
                return this.stickyField;
            }
            set {
                this.stickyField = value;
            }
        }
        
        /// <remarks/>
        public bool Export {
            get {
                return this.exportField;
            }
            set {
                this.exportField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitTopic : TransitObject {
        
        private string nameField;
        
        private string typeField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitStats : TransitObject {
        
        private int postsCountField;
        
        private int imagesCountField;
        
        private int commentsCountField;
        
        private TransitCounter rssCountField;
        
        private TransitCounter atomCountField;
        
        /// <remarks/>
        public int PostsCount {
            get {
                return this.postsCountField;
            }
            set {
                this.postsCountField = value;
            }
        }
        
        /// <remarks/>
        public int ImagesCount {
            get {
                return this.imagesCountField;
            }
            set {
                this.imagesCountField = value;
            }
        }
        
        /// <remarks/>
        public int CommentsCount {
            get {
                return this.commentsCountField;
            }
            set {
                this.commentsCountField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter RssCount {
            get {
                return this.rssCountField;
            }
            set {
                this.rssCountField = value;
            }
        }
        
        /// <remarks/>
        public TransitCounter AtomCount {
            get {
                return this.atomCountField;
            }
            set {
                this.atomCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitHighlight : TransitObject {
        
        private string titleField;
        
        private string urlField;
        
        private string descriptionField;
        
        private int imageIdField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferrerSearchQuery : TransitObject {
        
        private string searchQueryField;
        
        private long requestCountField;
        
        /// <remarks/>
        public string SearchQuery {
            get {
                return this.searchQueryField;
            }
            set {
                this.searchQueryField = value;
            }
        }
        
        /// <remarks/>
        public long RequestCount {
            get {
                return this.requestCountField;
            }
            set {
                this.requestCountField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferrerHostRollup : TransitObject {
        
        private string nameField;
        
        private string rollupField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Rollup {
            get {
                return this.rollupField;
            }
            set {
                this.rollupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReference : TransitObject {
        
        private string wordField;
        
        private string urlField;
        
        private string resultField;
        
        /// <remarks/>
        public string Word {
            get {
                return this.wordField;
            }
            set {
                this.wordField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitReferrerHost : TransitObject {
        
        private string lastUrlField;
        
        private string lastSourceField;
        
        private long requestCountField;
        
        private string nameField;
        
        /// <remarks/>
        public string LastUrl {
            get {
                return this.lastUrlField;
            }
            set {
                this.lastUrlField = value;
            }
        }
        
        /// <remarks/>
        public string LastSource {
            get {
                return this.lastSourceField;
            }
            set {
                this.lastSourceField = value;
            }
        }
        
        /// <remarks/>
        public long RequestCount {
            get {
                return this.requestCountField;
            }
            set {
                this.requestCountField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitBrowser : TransitObject {
        
        private string nameField;
        
        private string versionField;
        
        private string platformField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        public string Platform {
            get {
                return this.platformField;
            }
            set {
                this.platformField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitPostLogin : TransitObject {
        
        private TransitLogin loginField;
        
        private TransitPost postField;
        
        /// <remarks/>
        public TransitLogin Login {
            get {
                return this.loginField;
            }
            set {
                this.loginField = value;
            }
        }
        
        /// <remarks/>
        public TransitPost Post {
            get {
                return this.postField;
            }
            set {
                this.postField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitLogin : TransitObject {
        
        private string nameField;
        
        private string emailField;
        
        private TransitLoginRole roleField;
        
        private string usernameField;
        
        private string passwordField;
        
        private string websiteField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public TransitLoginRole Role {
            get {
                return this.roleField;
            }
            set {
                this.roleField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public string Website {
            get {
                return this.websiteField;
            }
            set {
                this.websiteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public enum TransitLoginRole {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        Guest,
        
        /// <remarks/>
        Administrator,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitFeedItem : TransitObject {
        
        private string titleField;
        
        private string linkField;
        
        private string descriptionField;
        
        private int feedIdField;
        
        /// <remarks/>
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public string Link {
            get {
                return this.linkField;
            }
            set {
                this.linkField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int FeedId {
            get {
                return this.feedIdField;
            }
            set {
                this.feedIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitFeed : TransitObject {
        
        private string nameField;
        
        private string urlField;
        
        private string descriptionField;
        
        private int intervalField;
        
        private System.DateTime updatedField;
        
        private string exceptionField;
        
        private string xslField;
        
        private string usernameField;
        
        private string passwordField;
        
        private TransitFeedType typeField;
        
        private System.DateTime savedField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public int Interval {
            get {
                return this.intervalField;
            }
            set {
                this.intervalField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Updated {
            get {
                return this.updatedField;
            }
            set {
                this.updatedField = value;
            }
        }
        
        /// <remarks/>
        public string Exception {
            get {
                return this.exceptionField;
            }
            set {
                this.exceptionField = value;
            }
        }
        
        /// <remarks/>
        public string Xsl {
            get {
                return this.xslField;
            }
            set {
                this.xslField = value;
            }
        }
        
        /// <remarks/>
        public string Username {
            get {
                return this.usernameField;
            }
            set {
                this.usernameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public TransitFeedType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Saved {
            get {
                return this.savedField;
            }
            set {
                this.savedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitComment : TransitObject {
        
        private int parentCommentIdField;
        
        private string textField;
        
        private string ipAddressField;
        
        private System.DateTime createdField;
        
        private System.DateTime modifiedField;
        
        private int loginIdField;
        
        private string loginNameField;
        
        private string loginWebsiteField;
        
        /// <remarks/>
        public int ParentCommentId {
            get {
                return this.parentCommentIdField;
            }
            set {
                this.parentCommentIdField = value;
            }
        }
        
        /// <remarks/>
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
            }
        }
        
        /// <remarks/>
        public string IpAddress {
            get {
                return this.ipAddressField;
            }
            set {
                this.ipAddressField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Created {
            get {
                return this.createdField;
            }
            set {
                this.createdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Modified {
            get {
                return this.modifiedField;
            }
            set {
                this.modifiedField = value;
            }
        }
        
        /// <remarks/>
        public int LoginId {
            get {
                return this.loginIdField;
            }
            set {
                this.loginIdField = value;
            }
        }
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string LoginWebsite {
            get {
                return this.loginWebsiteField;
            }
            set {
                this.loginWebsiteField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4016")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://dblock.org/ns/")]
    public partial class TransitImageComment : TransitAssociatedComment {
        
        private int imageIdField;
        
        /// <remarks/>
        public int ImageId {
            get {
                return this.imageIdField;
            }
            set {
                this.imageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostCommentByIdCompletedEventHandler(object sender, GetPostCommentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostCommentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostCommentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeletePostCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostCommentsCountCompletedEventHandler(object sender, GetPostCommentsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostCommentsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostCommentsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetAssociatedCommentsCompletedEventHandler(object sender, GetAssociatedCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatedCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatedCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitAssociatedComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitAssociatedComment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetAssociatedCommentsCountCompletedEventHandler(object sender, GetAssociatedCommentsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatedCommentsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatedCommentsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostCommentsCompletedEventHandler(object sender, GetPostCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostComment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateImageCommentCompletedEventHandler(object sender, CreateOrUpdateImageCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateImageCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateImageCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageCommentByIdCompletedEventHandler(object sender, GetImageCommentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCommentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCommentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImageComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImageComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteImageCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageCommentsCountCompletedEventHandler(object sender, GetImageCommentsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCommentsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCommentsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageCommentsCompletedEventHandler(object sender, GetImageCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImageComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImageComment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementCountersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementNamedCounterCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHourlyCountSumCompletedEventHandler(object sender, GetHourlyCountSumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHourlyCountSumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHourlyCountSumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitCounter Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitCounter)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedByIdCompletedEventHandler(object sender, GetFeedByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitFeed Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitFeed)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateFeedCompletedEventHandler(object sender, CreateOrUpdateFeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedsCountCompletedEventHandler(object sender, GetFeedsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedsCompletedEventHandler(object sender, GetFeedsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitFeed[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitFeed[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteFeedCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void UpdateFeedCompletedEventHandler(object sender, UpdateFeedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFeedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFeedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedItemByIdCompletedEventHandler(object sender, GetFeedItemByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedItemByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedItemByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitFeedItem Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitFeedItem)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateFeedItemCompletedEventHandler(object sender, CreateOrUpdateFeedItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateFeedItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateFeedItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedItemsCountCompletedEventHandler(object sender, GetFeedItemsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedItemsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedItemsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetFeedItemsCompletedEventHandler(object sender, GetFeedItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFeedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFeedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitFeedItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitFeedItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteFeedItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdatePostLoginCompletedEventHandler(object sender, CreateOrUpdatePostLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePostLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePostLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostLoginByIdCompletedEventHandler(object sender, GetPostLoginByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostLoginByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostLoginByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeletePostLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostLoginsCountCompletedEventHandler(object sender, GetPostLoginsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostLoginsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostLoginsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostLoginsCompletedEventHandler(object sender, GetPostLoginsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostLogin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostLogin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetBrowserByIdCompletedEventHandler(object sender, GetBrowserByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrowserByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrowserByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBrowser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBrowser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateBrowserCompletedEventHandler(object sender, CreateOrUpdateBrowserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateBrowserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateBrowserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementBrowserCounterCompletedEventHandler(object sender, IncrementBrowserCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementBrowserCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementBrowserCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetBrowsersCountCompletedEventHandler(object sender, GetBrowsersCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrowsersCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrowsersCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetBrowsersCompletedEventHandler(object sender, GetBrowsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBrowsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBrowsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitBrowser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitBrowser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteBrowserCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostByIdCompletedEventHandler(object sender, GetReferrerHostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHost)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateReferrerHostCompletedEventHandler(object sender, CreateOrUpdateReferrerHostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferrerHostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferrerHostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostsCountCompletedEventHandler(object sender, GetReferrerHostsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostsCompletedEventHandler(object sender, GetReferrerHostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHost[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteReferrerHostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLoginCompletedEventHandler(object sender, GetLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLoginByIdCompletedEventHandler(object sender, GetLoginByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLoginByUsernameCompletedEventHandler(object sender, GetLoginByUsernameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginByUsernameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginByUsernameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void ResetLoginPasswordEmailCompletedEventHandler(object sender, ResetLoginPasswordEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ResetLoginPasswordEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ResetLoginPasswordEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void ResetLoginPasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateLoginCompletedEventHandler(object sender, CreateOrUpdateLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLoginsCountCompletedEventHandler(object sender, GetLoginsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetLoginsCompletedEventHandler(object sender, GetLoginsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLoginsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLoginsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitLogin[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitLogin[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteLoginCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetTopicByIdCompletedEventHandler(object sender, GetTopicByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitTopic Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitTopic)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateTopicCompletedEventHandler(object sender, CreateOrUpdateTopicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateTopicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateTopicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetTopicsCountCompletedEventHandler(object sender, GetTopicsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetTopicsCompletedEventHandler(object sender, GetTopicsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTopicsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTopicsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitTopic[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitTopic[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteTopicCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateImageCompletedEventHandler(object sender, CreateOrUpdateImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateImageAttributesCompletedEventHandler(object sender, CreateOrUpdateImageAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateImageAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateImageAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageByIdCompletedEventHandler(object sender, GetImageByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImagesCountCompletedEventHandler(object sender, GetImagesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImagesCompletedEventHandler(object sender, GetImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementImageCounterCompletedEventHandler(object sender, IncrementImageCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementImageCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementImageCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementImageCountersCompletedEventHandler(object sender, IncrementImageCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementImageCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementImageCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageWithBitmapByIdCompletedEventHandler(object sender, GetImageWithBitmapByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithBitmapByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithBitmapByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageEXIFMetaDataByIdCompletedEventHandler(object sender, GetImageEXIFMetaDataByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageEXIFMetaDataByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageEXIFMetaDataByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public EXIFMetaData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((EXIFMetaData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageWithBitmapByIdIfModifiedSinceCompletedEventHandler(object sender, GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithBitmapByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageWithThumbnailByIdCompletedEventHandler(object sender, GetImageWithThumbnailByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithThumbnailByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithThumbnailByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetImageWithThumbnailByIdIfModifiedSinceCompletedEventHandler(object sender, GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetImageWithThumbnailByIdIfModifiedSinceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferenceByIdCompletedEventHandler(object sender, GetReferenceByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferenceByWordCompletedEventHandler(object sender, GetReferenceByWordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferenceByWordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferenceByWordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateReferenceCompletedEventHandler(object sender, CreateOrUpdateReferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferencesCountCompletedEventHandler(object sender, GetReferencesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferencesCompletedEventHandler(object sender, GetReferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SearchReferencesCompletedEventHandler(object sender, SearchReferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchReferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchReferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReference[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReference[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void SearchReferencesCountCompletedEventHandler(object sender, SearchReferencesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchReferencesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchReferencesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteReferenceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostRollupByIdCompletedEventHandler(object sender, GetReferrerHostRollupByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHostRollup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHostRollup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateReferrerHostRollupCompletedEventHandler(object sender, CreateOrUpdateReferrerHostRollupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferrerHostRollupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferrerHostRollupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostRollupsCountCompletedEventHandler(object sender, GetReferrerHostRollupsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerHostRollupsCompletedEventHandler(object sender, GetReferrerHostRollupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerHostRollupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerHostRollupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerHostRollup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerHostRollup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteReferrerHostRollupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerSearchQueryByIdCompletedEventHandler(object sender, GetReferrerSearchQueryByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerSearchQueryByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerSearchQueryByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerSearchQuery Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerSearchQuery)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateReferrerSearchQueryCompletedEventHandler(object sender, CreateOrUpdateReferrerSearchQueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateReferrerSearchQueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateReferrerSearchQueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerSearchQueriesCountCompletedEventHandler(object sender, GetReferrerSearchQueriesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerSearchQueriesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerSearchQueriesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetReferrerSearchQueriesCompletedEventHandler(object sender, GetReferrerSearchQueriesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReferrerSearchQueriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReferrerSearchQueriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitReferrerSearchQuery[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitReferrerSearchQuery[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteReferrerSearchQueryCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHighlightByIdCompletedEventHandler(object sender, GetHighlightByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitHighlight Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitHighlight)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateHighlightCompletedEventHandler(object sender, CreateOrUpdateHighlightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateHighlightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateHighlightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHighlightsCountCompletedEventHandler(object sender, GetHighlightsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetHighlightsCompletedEventHandler(object sender, GetHighlightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHighlightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHighlightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitHighlight[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitHighlight[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteHighlightCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostByIdCompletedEventHandler(object sender, GetPostByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPost Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPost)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void HasAccessToPostCompletedEventHandler(object sender, HasAccessToPostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HasAccessToPostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HasAccessToPostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdatePostCompletedEventHandler(object sender, CreateOrUpdatePostCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePostCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePostCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostsCountCompletedEventHandler(object sender, GetPostsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostsCompletedEventHandler(object sender, GetPostsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPost[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostsCountExCompletedEventHandler(object sender, GetPostsCountExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostsCountExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostsCountExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostsExCompletedEventHandler(object sender, GetPostsExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostsExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostsExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPost[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPost[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeletePostCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementPostCounterCompletedEventHandler(object sender, IncrementPostCounterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementPostCounterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementPostCounterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void IncrementPostCountersCompletedEventHandler(object sender, IncrementPostCountersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IncrementPostCountersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IncrementPostCountersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateStatsCompletedEventHandler(object sender, CreateOrUpdateStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetStatsCompletedEventHandler(object sender, GetStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitStats Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitStats)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetStatsSummaryCompletedEventHandler(object sender, GetStatsSummaryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStatsSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStatsSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitCounter[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitCounter[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdatePostImageCompletedEventHandler(object sender, CreateOrUpdatePostImageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePostImageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePostImageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostImageByIdCompletedEventHandler(object sender, GetPostImageByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostImageByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostImageByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostImage Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostImage)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeletePostImageCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostImagesCountCompletedEventHandler(object sender, GetPostImagesCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostImagesCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostImagesCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostImagesCompletedEventHandler(object sender, GetPostImagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostImage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostImage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostImagesCountExCompletedEventHandler(object sender, GetPostImagesCountExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostImagesCountExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostImagesCountExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPostImagesExCompletedEventHandler(object sender, GetPostImagesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPostImagesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPostImagesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPostImage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPostImage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPermalinkByIdCompletedEventHandler(object sender, GetPermalinkByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermalinkByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermalinkByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPermalink Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPermalink)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPermalinkBySourceCompletedEventHandler(object sender, GetPermalinkBySourceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermalinkBySourceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermalinkBySourceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPermalink Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPermalink)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdatePermalinkCompletedEventHandler(object sender, CreateOrUpdatePermalinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePermalinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePermalinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPermalinksCountCompletedEventHandler(object sender, GetPermalinksCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermalinksCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermalinksCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetPermalinksCompletedEventHandler(object sender, GetPermalinksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPermalinksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPermalinksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitPermalink[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitPermalink[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeletePermalinkCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCommentByIdCompletedEventHandler(object sender, GetCommentByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitComment Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitComment)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdateCommentCompletedEventHandler(object sender, CreateOrUpdateCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdateCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdateCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCommentsCountCompletedEventHandler(object sender, GetCommentsCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCommentsCompletedEventHandler(object sender, GetCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TransitComment[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TransitComment[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void DeleteCommentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void CreateOrUpdatePostCommentCompletedEventHandler(object sender, CreateOrUpdatePostCommentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrUpdatePostCommentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrUpdatePostCommentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetVersionCompletedEventHandler(object sender, GetVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetTitleCompletedEventHandler(object sender, GetTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetCopyrightCompletedEventHandler(object sender, GetCopyrightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCopyrightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCopyrightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetDescriptionCompletedEventHandler(object sender, GetDescriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    public delegate void GetUptimeCompletedEventHandler(object sender, GetUptimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.4016")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUptimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUptimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591